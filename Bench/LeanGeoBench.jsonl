{"name": "IMO_1995_1", "uuid": "e514ec65-36b4-410a-963a-b36daa7afd23", "statement_id": "bd19f74a-d71f-48b8-a460-b32900caa549", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_1995_1 :\n  ∀ (A B C D X Y Z P M N O₁ O₂ : Point) (L LXY L_AM L_DN : Line) (C₁ C₂ : Circle),\n    distinctPointsOnLine A B L ∧ C.onLine L ∧ D.onLine L ∧ between A B C ∧ between B C D ∧\n    midpoint A O₁ C ∧ O₁.isCentre C₁ ∧ A.onCircle C₁ ∧ C.onCircle C₁ ∧\n    midpoint B O₂ D ∧ O₂.isCentre C₂ ∧ B.onCircle C₂ ∧ D.onCircle C₂ ∧\n    circlesIntersectsAtTwoPoints C₁ C₂ X Y ∧ distinctPointsOnLine X Y LXY ∧\n    Z.onLine LXY ∧ between B Z C ∧ P.onLine LXY ∧ P ≠ Z ∧\n    coll C P M ∧ M.onCircle C₁ ∧ M ≠ C ∧\n    coll B P N ∧ N.onCircle C₂ ∧ N ≠ B ∧\n    distinctPointsOnLine A M L_AM ∧ distinctPointsOnLine D N L_DN →\n    concurrent L_AM L_DN LXY := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_1995_1 :\n  ∀ (A B C D X Y Z P M N O₁ O₂ : Point) (L LXY L_AM L_DN : Line) (C₁ C₂ : Circle),\n    distinctPointsOnLine A B L ∧ C.onLine L ∧ D.onLine L ∧ between A B C ∧ between B C D ∧\n    midpoint A O₁ C ∧ O₁.isCentre C₁ ∧ A.onCircle C₁ ∧ C.onCircle C₁ ∧\n    midpoint B O₂ D ∧ O₂.isCentre C₂ ∧ B.onCircle C₂ ∧ D.onCircle C₂ ∧\n    circlesIntersectsAtTwoPoints C₁ C₂ X Y ∧ distinctPointsOnLine X Y LXY ∧\n    Z.onLine LXY ∧ between B Z C ∧ P.onLine LXY ∧ P ≠ Z ∧\n    coll C P M ∧ M.onCircle C₁ ∧ M ≠ C ∧\n    coll B P N ∧ N.onCircle C₂ ∧ N ≠ B ∧\n    distinctPointsOnLine A M L_AM ∧ distinctPointsOnLine D N L_DN →\n    concurrent L_AM L_DN LXY := by"}
{"name": "Canada_1991_3", "uuid": "21a6a029-68de-42a9-80ff-f9fa94d2b9f9", "statement_id": "06a4b46f-1ce6-40a5-bac6-6bd5f37c757e", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Canada_1991_3 :\n  ∀ (P O : Point) (Ω : Circle),\n    P.insideCircle Ω ∧ O.isCentre Ω →\n    ∃ (Γ : Circle), ∀ (A B M : Point),\n      (A.onCircle Ω ∧ B.onCircle Ω ∧ between A P B ∧ midpoint A M B) →\n      M.onCircle Γ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Canada_1991_3 :\n  ∀ (P O : Point) (Ω : Circle),\n    P.insideCircle Ω ∧ O.isCentre Ω →\n    ∃ (Γ : Circle), ∀ (A B M : Point),\n      (A.onCircle Ω ∧ B.onCircle Ω ∧ between A P B ∧ midpoint A M B) →\n      M.onCircle Γ := by"}
{"name": "Problem_2_30_USAMO_1997_2", "uuid": "86f2db90-b556-4559-8e2e-a13359ad4397", "statement_id": "abd2e434-a482-4262-add8-248ab3fd35e6", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_2_30_USAMO_1997_2 :\n  ∀ (A B C D E F : Point)\n    (AB BC CA l1 l2 l3 EF FD DE lA lB lC : Line),\n    formTriangle A B C AB BC CA ∧\n    perpBisector B C l1 ∧ D.onLine l1 ∧\n    perpBisector C A l2 ∧ E.onLine l2 ∧\n    perpBisector A B l3 ∧ F.onLine l3 ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine F D FD ∧\n    distinctPointsOnLine D E DE ∧\n    A.onLine lA ∧ perpLine lA EF ∧\n    B.onLine lB ∧ perpLine lB FD ∧\n    C.onLine lC ∧ perpLine lC DE →\n    concurrent lA lB lC := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_2_30_USAMO_1997_2 :\n  ∀ (A B C D E F : Point)\n    (AB BC CA l1 l2 l3 EF FD DE lA lB lC : Line),\n    formTriangle A B C AB BC CA ∧\n    perpBisector B C l1 ∧ D.onLine l1 ∧\n    perpBisector C A l2 ∧ E.onLine l2 ∧\n    perpBisector A B l3 ∧ F.onLine l3 ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine F D FD ∧\n    distinctPointsOnLine D E DE ∧\n    A.onLine lA ∧ perpLine lA EF ∧\n    B.onLine lB ∧ perpLine lB FD ∧\n    C.onLine lC ∧ perpLine lC DE →\n    concurrent lA lB lC := by"}
{"name": "Euler's_Theorem", "uuid": "e4f65f91-bf1d-43f5-bdc2-205c016defac", "statement_id": "6f4f69c6-a976-4138-aeb2-c43fbaa84ada", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Euler's_Theorem :\n  ∀ (A B C O I D : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    inCentre I A B C ∧\n    foot I D BC →\n    (|(O─I)| * |(O─I)| = |(O─A)| * (|(O─A)| - 2 * |(I─D)|)) ∧ (|(O─A)| ≥ 2 * |(I─D)|) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Euler's_Theorem :\n  ∀ (A B C O I D : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    inCentre I A B C ∧\n    foot I D BC →\n    (|(O─I)| * |(O─I)| = |(O─A)| * (|(O─A)| - 2 * |(I─D)|)) ∧ (|(O─A)| ≥ 2 * |(I─D)|) := by"}
{"name": "Lemma1_45", "uuid": "e2ef815c-d260-4efb-a34b-facf59888d5b", "statement_id": "b220a89e-6b68-442b-8c15-326ba8105abc", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Lemma1_45 :\n  ∀ (A B C D E F M N I K : Point) (AB BC CA EF BI MN : Line) (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    inCircle Ω AB BC CA ∧\n    tangentAtPoint D I BC Ω ∧\n    tangentAtPoint E I CA Ω ∧\n    tangentAtPoint F I AB Ω ∧\n    midpoint B M C ∧\n    midpoint A N C ∧\n    distinctPointsOnLine B I BI ∧\n    distinctPointsOnLine E F EF ∧\n    twoLinesIntersectAtPoint BI EF K ∧\n    distinctPointsOnLine M N MN →\n  perpPoint B K C K ∧\n  K.onLine MN := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Lemma1_45 :\n  ∀ (A B C D E F M N I K : Point) (AB BC CA EF BI MN : Line) (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    inCircle Ω AB BC CA ∧\n    tangentAtPoint D I BC Ω ∧\n    tangentAtPoint E I CA Ω ∧\n    tangentAtPoint F I AB Ω ∧\n    midpoint B M C ∧\n    midpoint A N C ∧\n    distinctPointsOnLine B I BI ∧\n    distinctPointsOnLine E F EF ∧\n    twoLinesIntersectAtPoint BI EF K ∧\n    distinctPointsOnLine M N MN →\n  perpPoint B K C K ∧\n  K.onLine MN := by"}
{"name": "Problem_3_28_Shortlist_2001_G1", "uuid": "d30e93b8-64a1-447d-926f-b845e2016a41", "statement_id": "7ee26101-b919-4396-8d84-77a7cfc4c299", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_3_28_Shortlist_2001_G1 :\n  ∀ (A B C A1 B1 C1 P Q R S U V W X M N L K : Point)\n    (AB BC CA lPQ lQR lRS lSP lUV lVW lWX lXU lMN lNL lLK lKM lAA1 lBB1 lCC1 : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    square P Q R S lPQ lQR lRS lSP ∧ P.onLine BC ∧ Q.onLine BC ∧ R.onLine CA ∧ S.onLine AB ∧\n    midpoint P A1 R ∧ midpoint Q A1 S ∧\n    square U V W X lUV lVW lWX lXU ∧ U.onLine CA ∧ V.onLine CA ∧ W.onLine AB ∧ X.onLine BC ∧\n    midpoint U B1 W ∧ midpoint V B1 X ∧\n    square M N L K lMN lNL lLK lKM ∧ M.onLine AB ∧ N.onLine AB ∧ L.onLine BC ∧ K.onLine CA ∧\n    midpoint M C1 L ∧ midpoint N C1 K ∧\n    distinctPointsOnLine A A1 lAA1 ∧ distinctPointsOnLine B B1 lBB1 ∧ distinctPointsOnLine C C1 lCC1 →\n    concurrent lAA1 lBB1 lCC1 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_3_28_Shortlist_2001_G1 :\n  ∀ (A B C A1 B1 C1 P Q R S U V W X M N L K : Point)\n    (AB BC CA lPQ lQR lRS lSP lUV lVW lWX lXU lMN lNL lLK lKM lAA1 lBB1 lCC1 : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    square P Q R S lPQ lQR lRS lSP ∧ P.onLine BC ∧ Q.onLine BC ∧ R.onLine CA ∧ S.onLine AB ∧\n    midpoint P A1 R ∧ midpoint Q A1 S ∧\n    square U V W X lUV lVW lWX lXU ∧ U.onLine CA ∧ V.onLine CA ∧ W.onLine AB ∧ X.onLine BC ∧\n    midpoint U B1 W ∧ midpoint V B1 X ∧\n    square M N L K lMN lNL lLK lKM ∧ M.onLine AB ∧ N.onLine AB ∧ L.onLine BC ∧ K.onLine CA ∧\n    midpoint M C1 L ∧ midpoint N C1 K ∧\n    distinctPointsOnLine A A1 lAA1 ∧ distinctPointsOnLine B B1 lBB1 ∧ distinctPointsOnLine C C1 lCC1 →\n    concurrent lAA1 lBB1 lCC1 := by"}
{"name": "Russian_Olympiad_2010", "uuid": "4a8e7957-af97-4be6-b7f5-3ee3d90fb35c", "statement_id": "42d6e3ba-09a6-472e-82d0-c329dd7d5f89", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Russian_Olympiad_2010 :\n  ∀ (A B C X Y M : Point) (AB BC CA XY : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| + |(B─C)| + |(C─A)| = 4 ∧\n    X.onLine AB ∧ Y.onLine AC ∧ |(A─X)| = 1 ∧ |(A─Y)| = 1 ∧\n    distinctPointsOnLine X Y XY ∧\n    M.onLine BC ∧ M.onLine XY\n    → (|(A─B)| + |(B─M)| + |(M─A)| = 2) ∨ (|(A─C)| + |(C─M)| + |(M─A)| = 2) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Russian_Olympiad_2010 :\n  ∀ (A B C X Y M : Point) (AB BC CA XY : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| + |(B─C)| + |(C─A)| = 4 ∧\n    X.onLine AB ∧ Y.onLine AC ∧ |(A─X)| = 1 ∧ |(A─Y)| = 1 ∧\n    distinctPointsOnLine X Y XY ∧\n    M.onLine BC ∧ M.onLine XY\n    → (|(A─B)| + |(B─M)| + |(M─A)| = 2) ∨ (|(A─C)| + |(C─M)| + |(M─A)| = 2) := by"}
{"name": "Problem_4_42_USAMO_1988_4", "uuid": "e963cc95-9276-4d00-b75b-6e868ed35778", "statement_id": "b581428b-8434-4095-983c-aa114190684e", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_4_42_USAMO_1988_4 :\n  ∀ (A B C I O O1 O2 O3 : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    circumCentre O A B C ∧\n    circumCentre O1 I A B ∧\n    circumCentre O2 I B C ∧\n    circumCentre O3 I C A →\n    |(O─O1)| = |(O─O2)| ∧ |(O─O2)| = |(O─O3)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_4_42_USAMO_1988_4 :\n  ∀ (A B C I O O1 O2 O3 : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    circumCentre O A B C ∧\n    circumCentre O1 I A B ∧\n    circumCentre O2 I B C ∧\n    circumCentre O3 I C A →\n    |(O─O1)| = |(O─O2)| ∧ |(O─O2)| = |(O─O3)| := by"}
{"name": "Problem_4_41_Hong_Kong_1998", "uuid": "eddbf817-4422-416d-9011-6ee827b02eb1", "statement_id": "20f5ede4-b5ed-4c4c-9e89-56933feb23f1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_4_41_Hong_Kong_1998 :\n  ∀ (P Q R S H K : Point) (PQ QR RS SP HK QS : Line) (Ω :Circle),\n    cyclicQuadrilateral P Q R S PQ QR RS SP Ω ∧\n    ∠ P:S:R = ∟ ∧\n    distinctPointsOnLine P R PR ∧\n    foot Q H PR ∧\n    foot Q K SP ∧\n    distinctPointsOnLine H K HK ∧\n    distinctPointsOnLine Q S QS →\n  ∃ (X : Point), X.onLine HK ∧ X.onLine QS ∧ midpoint Q X S := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_4_41_Hong_Kong_1998 :\n  ∀ (P Q R S H K : Point) (PQ QR RS SP HK QS : Line) (Ω :Circle),\n    cyclicQuadrilateral P Q R S PQ QR RS SP Ω ∧\n    ∠ P:S:R = ∟ ∧\n    distinctPointsOnLine P R PR ∧\n    foot Q H PR ∧\n    foot Q K SP ∧\n    distinctPointsOnLine H K HK ∧\n    distinctPointsOnLine Q S QS →\n  ∃ (X : Point), X.onLine HK ∧ X.onLine QS ∧ midpoint Q X S := by"}
{"name": "IMO1985_1", "uuid": "566b834a-b3a4-4fc2-a93e-f9ef4ea0d52e", "statement_id": "b584e146-69b2-4bed-8aaf-e264918138a1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO1985_1 :\n  ∀ (A B C D K : Point) (Ω ω : Circle) (AB BC CD DA : Line),\n    cyclicQuadrilateral A B C D AB BC CD DA Ω ∧\n    K.onLine AB ∧\n    K.isCentre ω ∧\n    tangentLine BC ω ∧\n    tangentLine CD ω ∧\n    tangentLine DA ω →\n    |(A─D)| + |(B─C)| = |(A─B)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO1985_1 :\n  ∀ (A B C D K : Point) (Ω ω : Circle) (AB BC CD DA : Line),\n    cyclicQuadrilateral A B C D AB BC CD DA Ω ∧\n    K.onLine AB ∧\n    K.isCentre ω ∧\n    tangentLine BC ω ∧\n    tangentLine CD ω ∧\n    tangentLine DA ω →\n    |(A─D)| + |(B─C)| = |(A─B)| := by"}
{"name": "Russian_Olympiad_1_41", "uuid": "8389a539-54fe-4cec-a0ba-0a37175219d3", "statement_id": "62c8597a-c166-4818-9c62-1424fa773f40", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Russian_Olympiad_1_41 :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    between B E F ∧\n    between B F C ∧\n    ∠ B:A:E = ∠ C:D:F ∧\n    ∠ E:A:F = ∠ F:D:E →\n    ∠ F:A:C = ∠ E:D:B := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Russian_Olympiad_1_41 :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    between B E F ∧\n    between B F C ∧\n    ∠ B:A:E = ∠ C:D:F ∧\n    ∠ E:A:F = ∠ F:D:E →\n    ∠ F:A:C = ∠ E:D:B := by"}
{"name": "Problem_3_29_USA_TSTST_2011_4", "uuid": "ca612d19-aa76-46fe-9693-3591ec4dd506", "statement_id": "d80d648d-51a9-445a-9b0e-39cbee63be7f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_3_29_USA_TSTST_2011_4 :\n  ∀ (A B C D E F H O M N P Q R D E F : Point) (ω : Circle) (AB BC CA MN PQ : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    circumCentre O A B C ∧\n    circumCircle ω A B C ∧\n    midpoint A M B ∧\n    midpoint A N C ∧\n    between M H P ∧\n    P.onCircle ω ∧\n    between N H Q ∧\n    Q.onCircle ω ∧\n    distinctPointsOnLine M N MN ∧\n    R.onLine MN ∧\n    R.onLine PQ →\n    ∠O:A:R = ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Problem_3_29_USA_TSTST_2011_4 :\n  ∀ (A B C D E F H O M N P Q R D E F : Point) (ω : Circle) (AB BC CA MN PQ : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    circumCentre O A B C ∧\n    circumCircle ω A B C ∧\n    midpoint A M B ∧\n    midpoint A N C ∧\n    between M H P ∧\n    P.onCircle ω ∧\n    between N H Q ∧\n    Q.onCircle ω ∧\n    distinctPointsOnLine M N MN ∧\n    R.onLine MN ∧\n    R.onLine PQ →\n    ∠O:A:R = ∟ := by"}
{"name": "JMO_2012_1", "uuid": "43c28f1e-4b9b-4d9f-b1d1-d2d351567ad5", "statement_id": "43ae9d23-7ae8-48c8-8c33-f47d3a5abe44", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem JMO_2012_1 :\n  ∀ (A B C P Q R S : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    between A P B ∧ between A Q C ∧ |(A─P)| = |(A─Q)| ∧\n    between B S C ∧ between B R C ∧ between B S R ∧ S ≠ R ∧\n    ∠ B:P:S = ∠ P:R:S ∧ ∠ C:Q:R = ∠ Q:S:R →\n    cyclic P Q R S := by sorry\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem JMO_2012_1 :\n  ∀ (A B C P Q R S : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    between A P B ∧ between A Q C ∧ |(A─P)| = |(A─Q)| ∧\n    between B S C ∧ between B R C ∧ between B S R ∧ S ≠ R ∧\n    ∠ B:P:S = ∠ P:R:S ∧ ∠ C:Q:R = ∠ Q:S:R →\n    cyclic P Q R S := by sorry"}
{"name": "problem_CO20", "uuid": "5db219f9-3248-4356-b535-df8b5cb5aa91", "statement_id": "d67e07f7-1e71-4be0-a00d-c62bde505ae4", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_CO20 :\n∀ (A B C I M P H Q : Point) (AB BC CA PH MH BH QH: Line),\n  formTriangle A B C AB BC CA ∧\n  |(A─B)| = |(B─C)| ∧\n  inCentre I A B C ∧\n  midpoint B M I ∧\n  between A P C  ∧\n  (|(A─P)| = 3 * |(P─C)|) ∧\n  between P I H ∧\n  distinctPointsOnLine P H PH ∧\n  distinctPointsOnLine M H MH ∧\n  distinctPointsOnLine B H BH ∧\n  distinctPointsOnLine Q H QH ∧\n  perpLine PH MH ∧\n  cyclic Q B C A ∧\n  |(A─Q)| = |(B─Q)|\n  → perpLine BH QH :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_CO20 :\n∀ (A B C I M P H Q : Point) (AB BC CA PH MH BH QH: Line),\n  formTriangle A B C AB BC CA ∧\n  |(A─B)| = |(B─C)| ∧\n  inCentre I A B C ∧\n  midpoint B M I ∧\n  between A P C  ∧\n  (|(A─P)| = 3 * |(P─C)|) ∧\n  between P I H ∧\n  distinctPointsOnLine P H PH ∧\n  distinctPointsOnLine M H MH ∧\n  distinctPointsOnLine B H BH ∧\n  distinctPointsOnLine Q H QH ∧\n  perpLine PH MH ∧\n  cyclic Q B C A ∧\n  |(A─Q)| = |(B─Q)|\n  → perpLine BH QH :=\nby"}
{"name": "Simson_Line", "uuid": "5dc918a2-bfad-47b3-a494-dac05bdcfc43", "statement_id": "dd70d68e-aa93-4064-934e-0f39928bc4fe", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Simson_Line :\n  ∀ (A B C P X Y Z : Point) (Ω : Circle) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    P.onCircle Ω ∧\n    foot P X BC ∧\n    foot P Y CA ∧\n    foot P Z AB →\n    coll X Y Z := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Simson_Line :\n  ∀ (A B C P X Y Z : Point) (Ω : Circle) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    P.onCircle Ω ∧\n    foot P X BC ∧\n    foot P Y CA ∧\n    foot P Z AB →\n    coll X Y Z := by"}
{"name": "Canada1997_4", "uuid": "c427f3a6-54f8-4123-a847-9a12c5e62d3f", "statement_id": "6ba8c269-fef4-4df1-b914-8582f1d27a62", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Canada1997_4 :\n  ∀ (A B C D O : Point) (AB BC CD DA : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    insideQuadrilateral O A B C D AB BC CD DA ∧\n    ∠ A:O:B + ∠ C:O:D = ∟ + ∟ →\n    ∠ O:B:C = ∠ O:D:C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Canada1997_4 :\n  ∀ (A B C D O : Point) (AB BC CD DA : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    insideQuadrilateral O A B C D AB BC CD DA ∧\n    ∠ A:O:B + ∠ C:O:D = ∟ + ∟ →\n    ∠ O:B:C = ∠ O:D:C := by"}
{"name": "Lemma1_42", "uuid": "29355208-730e-4d9b-b858-5ea75da5db50", "statement_id": "c18e092c-505f-43d6-be8c-b24200ed286c", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Lemma1_42 :\n  ∀ (A B C I X Y Z D E F : Point) (AB BC CA XY YZ ZX : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    X.onCircle Ω ∧ |(X─B)| = |(X─C)| ∧ opposingSides X A BC ∧\n    Y.onCircle Ω ∧ |(Y─C)| = |(Y─A)| ∧ opposingSides Y B CA ∧\n    Z.onCircle Ω ∧ |(Z─A)| = |(Z─B)| ∧ opposingSides Z C AB ∧\n    inCentre I A B C ∧\n    foot X D YZ ∧\n    foot Y E ZX ∧\n    foot Z F XY ∧\n    coll X I D ∧\n    coll Y I E ∧\n    coll Z I F →\n  orthoCentre I X Y Z D E F YZ ZX XY := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Lemma1_42 :\n  ∀ (A B C I X Y Z D E F : Point) (AB BC CA XY YZ ZX : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    X.onCircle Ω ∧ |(X─B)| = |(X─C)| ∧ opposingSides X A BC ∧\n    Y.onCircle Ω ∧ |(Y─C)| = |(Y─A)| ∧ opposingSides Y B CA ∧\n    Z.onCircle Ω ∧ |(Z─A)| = |(Z─B)| ∧ opposingSides Z C AB ∧\n    inCentre I A B C ∧\n    foot X D YZ ∧\n    foot Y E ZX ∧\n    foot Z F XY ∧\n    coll X I D ∧\n    coll Y I E ∧\n    coll Z I F →\n  orthoCentre I X Y Z D E F YZ ZX XY := by"}
{"name": "Iran_TST_2011_1", "uuid": "1cf8bfd8-d60a-41b1-9426-93188180671e", "statement_id": "a7eab299-6947-4ae8-bbcb-d831e6c3a75f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Iran_TST_2011_1 :\n  ∀ (A B C M E F K L T : Point) (AB BC CA KL AT : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    ∠ A:B:C > ∠ B:C:A ∧\n    midpoint B M C ∧\n    foot B E CA ∧\n    foot C F AB ∧\n    midpoint M K E ∧\n    midpoint M L F ∧\n    distinctPointsOnLine K L KL ∧\n    T.onLine KL ∧\n    distinctPointsOnLine A T AT ∧\n    ¬(AT.intersectsLine BC) →\n    |(T─A)| = |(T─M)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Iran_TST_2011_1 :\n  ∀ (A B C M E F K L T : Point) (AB BC CA KL AT : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    ∠ A:B:C > ∠ B:C:A ∧\n    midpoint B M C ∧\n    foot B E CA ∧\n    foot C F AB ∧\n    midpoint M K E ∧\n    midpoint M L F ∧\n    distinctPointsOnLine K L KL ∧\n    T.onLine KL ∧\n    distinctPointsOnLine A T AT ∧\n    ¬(AT.intersectsLine BC) →\n    |(T─A)| = |(T─M)| := by"}
{"name": "Numina_Geometry_1001", "uuid": "e553ddc0-3851-4e08-a95b-7d7f4f86d1f6", "statement_id": "42311f9d-a742-48fa-99d4-d78c5061311e", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1001 :\n  ∀ (A B C D E M N : Point) (AB BC CA DE: Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A D BC  ∧\n    foot C E AB ∧\n    distinctPointsOnLine D E DE ∧\n    foot A M DE ∧\n    foot C N DE →\n    |(M─E)| = |(D─N)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1001 :\n  ∀ (A B C D E M N : Point) (AB BC CA DE: Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A D BC  ∧\n    foot C E AB ∧\n    distinctPointsOnLine D E DE ∧\n    foot A M DE ∧\n    foot C N DE →\n    |(M─E)| = |(D─N)| := by"}
{"name": "problem_MP19", "uuid": "b7700fca-5560-47b1-8a76-c02a9c2e2e02", "statement_id": "67f0efd2-ed83-4ede-9fde-c0179eff0637", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_MP19 :\n∀ (A B C D E F P : Point)\n  (AB BC CD DA BD AE CF AC : Line),\n  formQuadrilateral A B C D AB BC CD DA ∧\n  distinctPointsOnLine B D BD ∧\n  distinctPointsOnLine A E AE ∧\n  E.onLine BD ∧\n  perpLine AE BD ∧\n  distinctPointsOnLine C F CF ∧\n  twoLinesIntersectAtPoint CF BD F ∧\n  perpLine CF BD ∧\n  distinctPointsOnLine A C AC ∧\n  midpoint A P C\n→ |(P─E)| = |(P─F)| :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_MP19 :\n∀ (A B C D E F P : Point)\n  (AB BC CD DA BD AE CF AC : Line),\n  formQuadrilateral A B C D AB BC CD DA ∧\n  distinctPointsOnLine B D BD ∧\n  distinctPointsOnLine A E AE ∧\n  E.onLine BD ∧\n  perpLine AE BD ∧\n  distinctPointsOnLine C F CF ∧\n  twoLinesIntersectAtPoint CF BD F ∧\n  perpLine CF BD ∧\n  distinctPointsOnLine A C AC ∧\n  midpoint A P C\n→ |(P─E)| = |(P─F)| :=\nby"}
{"name": "problem_HP97", "uuid": "af7a5eb7-3fa1-4fca-a84d-ef71199857db", "statement_id": "7d6c7402-df7e-400a-85f3-ab4b31c76a6b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP97 :\n  ∀ (A B C O I : Point) (AB BC CA OI AI : Line),\n  formTriangle A B C AB BC CA ∧\n  circumCentre O A B C ∧\n  inCentre I A B C ∧\n  distinctPointsOnLine O I OI ∧\n  distinctPointsOnLine A I AI ∧\n  perpLine OI AI\n  → (|(A─B)| + |(A─C)|) = (|(B─C)| + |(B─C)|) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP97 :\n  ∀ (A B C O I : Point) (AB BC CA OI AI : Line),\n  formTriangle A B C AB BC CA ∧\n  circumCentre O A B C ∧\n  inCentre I A B C ∧\n  distinctPointsOnLine O I OI ∧\n  distinctPointsOnLine A I AI ∧\n  perpLine OI AI\n  → (|(A─B)| + |(A─C)|) = (|(B─C)| + |(B─C)|) := by"}
{"name": "Numina_Geometry_925", "uuid": "dc05fb06-1290-4711-812e-9503b77471eb", "statement_id": "42f61d12-669d-4165-b6de-5b28fbb91c8f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_925 :\n  ∀ (O M K N A B C D : Point) (Ω : Circle)\n    (OM MK KN NO AB CD : Line),\n    square O M K N OM MK KN NO ∧\n    O.isCentre Ω ∧\n    K.onCircle Ω ∧\n    threePointsOnLine A M B AB ∧\n    threePointsOnLine C N D CD ∧\n    A.onCircle Ω ∧\n    B.onCircle Ω ∧\n    C.onCircle Ω ∧\n    D.onCircle Ω →\n    |(A─M)| * |(M─B)| = |(C─N)| * |(N─D)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_925 :\n  ∀ (O M K N A B C D : Point) (Ω : Circle)\n    (OM MK KN NO AB CD : Line),\n    square O M K N OM MK KN NO ∧\n    O.isCentre Ω ∧\n    K.onCircle Ω ∧\n    threePointsOnLine A M B AB ∧\n    threePointsOnLine C N D CD ∧\n    A.onCircle Ω ∧\n    B.onCircle Ω ∧\n    C.onCircle Ω ∧\n    D.onCircle Ω →\n    |(A─M)| * |(M─B)| = |(C─N)| * |(N─D)| := by"}
{"name": "Numina_Geometry_478", "uuid": "7b902cf0-9564-4700-9cc8-e54c704e5bd5", "statement_id": "38311492-c7d3-4372-aef2-c3375f5d40d4", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_478 : ∀ (A B C D P O : Point),\ntriangle P A B ∧\nbetween A P C ∧\nbetween B P D ∧\n|(P─A)| = |(P─D)| ∧\n|(P─B)| = |(P─C)| ∧\ncircumCentre O P A B →\nperpPoint O P C D := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_478 : ∀ (A B C D P O : Point),\ntriangle P A B ∧\nbetween A P C ∧\nbetween B P D ∧\n|(P─A)| = |(P─D)| ∧\n|(P─B)| = |(P─C)| ∧\ncircumCentre O P A B →\nperpPoint O P C D := by"}
{"name": "Numina_Geometry_617", "uuid": "2643f2d5-dddc-431b-be42-ef8eb5bc3d42", "statement_id": "8ec777e0-ad8d-4f69-845b-3806e9a0a9ce", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_617 :\n  ∀ (a b c d e f : Point) (BD EF : Line),\n    triangle a b c ∧\n    coll a d c ∧\n    coll b e c ∧\n    coll d f c ∧\n    distinctPointsOnLine b d BD ∧\n    distinctPointsOnLine e f EF ∧\n    ∠ a:b:d = ∠ d:b:c ∧\n    ∠ b:d:e = ∠ e:d:c ∧\n    ∠ d:e:f = ∠ f:e:c ∧\n    ¬ (BD.intersectsLine EF)\n    → ∠ a:b:c = ∠ b:a:c + ∠ b:a:c := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_617 :\n  ∀ (a b c d e f : Point) (BD EF : Line),\n    triangle a b c ∧\n    coll a d c ∧\n    coll b e c ∧\n    coll d f c ∧\n    distinctPointsOnLine b d BD ∧\n    distinctPointsOnLine e f EF ∧\n    ∠ a:b:d = ∠ d:b:c ∧\n    ∠ b:d:e = ∠ e:d:c ∧\n    ∠ d:e:f = ∠ f:e:c ∧\n    ¬ (BD.intersectsLine EF)\n    → ∠ a:b:c = ∠ b:a:c + ∠ b:a:c := by"}
{"name": "problem_HP71", "uuid": "5230d80e-a08f-4826-9f2b-fd3a6226cf15", "statement_id": "9f44c3d1-efbd-4b02-b570-dab1cdbae0f9", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP71 :\n  ∀ (A B C D E F H O M N : Point)\n    (AB BC CA AD BE CF ED FD MN OH: Line),\n    formTriangle A B C AB BC CA ∧\n    distinctPointsOnLine A D AD ∧\n    distinctPointsOnLine B E BE ∧\n    distinctPointsOnLine C F CF ∧\n    twoLinesIntersectAtPoint BC AD D ∧ perpLine BC AD ∧\n    twoLinesIntersectAtPoint CA BE E ∧ perpLine CA BE ∧\n    twoLinesIntersectAtPoint AB CF F ∧ perpLine AB CF ∧\n    twoLinesIntersectAtPoint AD BE H ∧ H.onLine CF ∧\n    circumCentre O A B C ∧\n    orthoCentre H A B C ∧\n    distinctPointsOnLine D E ED ∧\n    distinctPointsOnLine F D FD ∧\n    twoLinesIntersectAtPoint ED AB M ∧\n    twoLinesIntersectAtPoint FD AC N ∧\n    distinctPointsOnLine O H OH ∧\n    distinctPointsOnLine M N MN\n  → perpLine OH MN\n:= by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP71 :\n  ∀ (A B C D E F H O M N : Point)\n    (AB BC CA AD BE CF ED FD MN OH: Line),\n    formTriangle A B C AB BC CA ∧\n    distinctPointsOnLine A D AD ∧\n    distinctPointsOnLine B E BE ∧\n    distinctPointsOnLine C F CF ∧\n    twoLinesIntersectAtPoint BC AD D ∧ perpLine BC AD ∧\n    twoLinesIntersectAtPoint CA BE E ∧ perpLine CA BE ∧\n    twoLinesIntersectAtPoint AB CF F ∧ perpLine AB CF ∧\n    twoLinesIntersectAtPoint AD BE H ∧ H.onLine CF ∧\n    circumCentre O A B C ∧\n    orthoCentre H A B C ∧\n    distinctPointsOnLine D E ED ∧\n    distinctPointsOnLine F D FD ∧\n    twoLinesIntersectAtPoint ED AB M ∧\n    twoLinesIntersectAtPoint FD AC N ∧\n    distinctPointsOnLine O H OH ∧\n    distinctPointsOnLine M N MN\n  → perpLine OH MN\n:= by"}
{"name": "Numina_Geometry_1339", "uuid": "27635434-ce71-418f-a092-99665a853555", "statement_id": "142cd624-df1f-4375-842b-e2b31c8ce5aa", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1339 :\n  ∀ (A B C D K L M : Point)\n    (AB BC CD DA BD AK : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    distinctPointsOnLine B D BD ∧\n    distinctPointsOnLine A K AK ∧\n    between B K D ∧\n    twoLinesIntersectAtPoint AK CD L ∧\n    twoLinesIntersectAtPoint AK BC M\n  → |(A─K)| * |(A─K)| = |(K─L)| * |(K─M)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1339 :\n  ∀ (A B C D K L M : Point)\n    (AB BC CD DA BD AK : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    distinctPointsOnLine B D BD ∧\n    distinctPointsOnLine A K AK ∧\n    between B K D ∧\n    twoLinesIntersectAtPoint AK CD L ∧\n    twoLinesIntersectAtPoint AK BC M\n  → |(A─K)| * |(A─K)| = |(K─L)| * |(K─M)| := by"}
{"name": "problem_HP97", "uuid": "3cf25295-4b56-4072-9e04-0f292316f730", "statement_id": "1c6695d2-1e5e-43b2-afdd-392fbd91958f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP97 :\n  ∀ (A B C O I : Point) (AB BC CA OI AI : Line),\n  formTriangle A B C AB BC CA ∧\n  circumCentre O A B C ∧\n  inCentre I A B C ∧\n  distinctPointsOnLine O I OI ∧\n  distinctPointsOnLine A I AI ∧\n  perpLine OI AI\n  → (|(A─B)| + |(A─C)|) = (|(B─C)| + |(B─C)|) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem problem_HP97 :\n  ∀ (A B C O I : Point) (AB BC CA OI AI : Line),\n  formTriangle A B C AB BC CA ∧\n  circumCentre O A B C ∧\n  inCentre I A B C ∧\n  distinctPointsOnLine O I OI ∧\n  distinctPointsOnLine A I AI ∧\n  perpLine OI AI\n  → (|(A─B)| + |(A─C)|) = (|(B─C)| + |(B─C)|) := by"}
{"name": "Numina_Geometry_145", "uuid": "82642a15-0ec3-43b0-9b48-8966e2ae568b", "statement_id": "29b25229-ba61-4f1c-82b4-fafdd96123dc", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_145 :\n  ∀ (A B C D E : Point) (O : Circle) (AD BC : Line),\n    (A.onCircle O) ∧\n    (B.onCircle O) ∧\n    (C.onCircle O) ∧\n    (D.onCircle O) ∧\n    (distinctPointsOnLine A D AD) ∧\n    (distinctPointsOnLine B C BC) ∧\n    (A ≠ B) ∧ (A ≠ C) ∧\n    (twoLinesIntersectAtPoint AD BC E) ∧\n    (|(A─B)| = |(A─C)|)\n    → |(A─E)| * |(A─D)| = |(A─C)| * |(A─C)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_145 :\n  ∀ (A B C D E : Point) (O : Circle) (AD BC : Line),\n    (A.onCircle O) ∧\n    (B.onCircle O) ∧\n    (C.onCircle O) ∧\n    (D.onCircle O) ∧\n    (distinctPointsOnLine A D AD) ∧\n    (distinctPointsOnLine B C BC) ∧\n    (A ≠ B) ∧ (A ≠ C) ∧\n    (twoLinesIntersectAtPoint AD BC E) ∧\n    (|(A─B)| = |(A─C)|)\n    → |(A─E)| * |(A─D)| = |(A─C)| * |(A─C)| := by"}
{"name": "Parallel5", "uuid": "bbd0737c-cde7-45c6-8463-5c4df7deeeea", "statement_id": "e8ad18a2-87e9-4c48-9c85-7dc10e5573c8", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Parallel5 : ∀ (S U V X R Y T W : Point) (SU VX RY : Line),\n  distinctPointsOnLine S U SU ∧\n  distinctPointsOnLine V X VX ∧\n  distinctPointsOnLine R Y RY ∧\n  twoLinesIntersectAtPoint SU RY T ∧ between S T U ∧ between T W Y ∧\n  twoLinesIntersectAtPoint VX RY W ∧ between V W X ∧ between R T W ∧\n  V.sameSide S RY ∧\n  X.sameSide U RY ∧\n  ∠ R:T:S + ∠ V:W:Y = ∟ + ∟ →\n  ¬ VX.intersectsLine SU :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Parallel5 : ∀ (S U V X R Y T W : Point) (SU VX RY : Line),\n  distinctPointsOnLine S U SU ∧\n  distinctPointsOnLine V X VX ∧\n  distinctPointsOnLine R Y RY ∧\n  twoLinesIntersectAtPoint SU RY T ∧ between S T U ∧ between T W Y ∧\n  twoLinesIntersectAtPoint VX RY W ∧ between V W X ∧ between R T W ∧\n  V.sameSide S RY ∧\n  X.sameSide U RY ∧\n  ∠ R:T:S + ∠ V:W:Y = ∟ + ∟ →\n  ¬ VX.intersectsLine SU :=\nby"}
{"name": "Quadrilateral4", "uuid": "b0890855-3c0a-49c8-b04f-b4ad2de95052", "statement_id": "718e8aed-f673-4cbb-b601-34ff8925a994", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Quadrilateral4 : ∀ (G H I J : Point) (GH IJ GJ GI : Line),\n  formQuadrilateral G H J I GH HJ IJ GI ∧ distinctPointsOnLine G J GJ ∧\n  |(I─J)| = |(G─H)| ∧\n  ¬ GH.intersectsLine IJ →\n  |(H─J)| = |(G─I)|  :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Quadrilateral4 : ∀ (G H I J : Point) (GH IJ GJ GI : Line),\n  formQuadrilateral G H J I GH HJ IJ GI ∧ distinctPointsOnLine G J GJ ∧\n  |(I─J)| = |(G─H)| ∧\n  ¬ GH.intersectsLine IJ →\n  |(H─J)| = |(G─I)|  :=\nby"}
{"name": "Congruent15", "uuid": "059d2ec2-724f-47bf-9fa5-e42ccc37d51b", "statement_id": "62d2d4e6-8620-4d50-906c-c84b0bf683e5", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Congruent15 : ∀ (S T U V : Point) (ST TU UV SV SU : Line),\n  formTriangle S T U ST TU SU ∧\n  formTriangle S U V SU UV SV ∧\n  V.opposingSides T SU ∧\n  ∠ U:V:S = ∟ ∧\n  ∠ U:S:V = ∠ S:U:T ∧\n  ∠ S:T:U = ∟ →\n  |(U─V)| = |(S─T)| :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Congruent15 : ∀ (S T U V : Point) (ST TU UV SV SU : Line),\n  formTriangle S T U ST TU SU ∧\n  formTriangle S U V SU UV SV ∧\n  V.opposingSides T SU ∧\n  ∠ U:V:S = ∟ ∧\n  ∠ U:S:V = ∠ S:U:T ∧\n  ∠ S:T:U = ∟ →\n  |(U─V)| = |(S─T)| :=\nby"}
{"name": "Similar4", "uuid": "3f6fc4b9-6afc-44ad-8a5f-e284b88025db", "statement_id": "0630e456-863a-4d21-b76c-22c0a48f2100", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Similar4 : ∀ (E F G H I : Point) (EF GH EG FH : Line),\n  formTriangle E F I EF FH EG ∧\n  formTriangle G H I GH FH EG ∧\n  between E I G ∧\n  between H I F ∧\n  ∠ H:G:I = ∠ F:E:I →\n  similarTriangle E I F G I H :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Similar4 : ∀ (E F G H I : Point) (EF GH EG FH : Line),\n  formTriangle E F I EF FH EG ∧\n  formTriangle G H I GH FH EG ∧\n  between E I G ∧\n  between H I F ∧\n  ∠ H:G:I = ∠ F:E:I →\n  similarTriangle E I F G I H :=\nby"}
{"name": "Triangle18", "uuid": "dd400952-e9a2-4ae4-84a5-b82ce8d6d193", "statement_id": "8b2464d2-cd02-45ba-9af8-928f160a07d9", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Triangle18 : ∀ (S T V R U W : Point) (ST TV VS RU UW WR : Line),\n  formTriangle S T V ST TV VS ∧\n  formTriangle R U W RU UW WR ∧\n  ∠ S:V:T = ∠ W:R:U ∧\n  ∠ V:S:T = ∠ R:W:U →\n  |(S─V)| / |(R─W)| = |(T─V)| / |(R─U)| :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Triangle18 : ∀ (S T V R U W : Point) (ST TV VS RU UW WR : Line),\n  formTriangle S T V ST TV VS ∧\n  formTriangle R U W RU UW WR ∧\n  ∠ S:V:T = ∠ W:R:U ∧\n  ∠ V:S:T = ∠ R:W:U →\n  |(S─V)| / |(R─W)| = |(T─V)| / |(R─U)| :=\nby"}
{"name": "similar_19", "uuid": "95f43764-5f89-4d7b-8078-4c59c2c1c1e3", "statement_id": "5c9651ca-f1ff-42fa-871e-5ca7106b7a2b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem similar_19 : ∀ (H I J K : Point) (HI IJ HJ IK : Line),\n  formTriangle H I K HI IK HJ ∧\n  formTriangle I J K IJ HJ IK ∧\n  between H K J ∧\n  ∠ H:K:I = ∟ ∧ ∠ I:K:J = ∟ ∧\n  ∠ H:I:J = ∟ →\n  similarTriangle I J K H I K :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem similar_19 : ∀ (H I J K : Point) (HI IJ HJ IK : Line),\n  formTriangle H I K HI IK HJ ∧\n  formTriangle I J K IJ HJ IK ∧\n  between H K J ∧\n  ∠ H:K:I = ∟ ∧ ∠ I:K:J = ∟ ∧\n  ∠ H:I:J = ∟ →\n  similarTriangle I J K H I K :=\nby"}
{"name": "Quadrilateral11", "uuid": "afe51125-49b1-46bf-8c23-a4c7110ea64c", "statement_id": "7ce00c5a-1c6d-4329-b3e1-56c4612e746a", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Quadrilateral11: ∀ (S T U V : Point) (ST UV SU TV: Line),\n  formQuadrilateral S T V U ST TV UV SU ∧\n  |(U─V)| = |(S─U)| ∧\n ∠ S:U:T = ∠ V:U:T  → |(S─T)| = |(T─V)|:=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Quadrilateral11: ∀ (S T U V : Point) (ST UV SU TV: Line),\n  formQuadrilateral S T V U ST TV UV SU ∧\n  |(U─V)| = |(S─U)| ∧\n ∠ S:U:T = ∠ V:U:T  → |(S─T)| = |(T─V)|:=\nby"}
{"name": "Congruent8", "uuid": "ce612d32-1d29-4501-bb56-feadd8434c36", "statement_id": "06906117-2e23-43c7-9284-ac1cd2d5c07b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Congruent8 : ∀ (P Q R S T : Point) (PQ QR RS ST PT PS QS : Line),\n  formTriangle P S T PS ST PT ∧\n  formTriangle Q R S QR RS QS ∧\n  formTriangle P Q S PQ QS PS ∧\n  P.opposingSides R QS ∧ Q.sameSide R PS ∧\n  Q.opposingSides T PS ∧ P.sameSide T QS ∧\n  ∠ R:Q:S = ∠ S:P:T ∧\n  |(P─T)| = |(Q─R)| ∧\n  |(P─Q)| = |(Q─S)| ∧\n  |(Q─S)| = |(S─P)| →\n  congruentTriangle P S T Q S R:=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Congruent8 : ∀ (P Q R S T : Point) (PQ QR RS ST PT PS QS : Line),\n  formTriangle P S T PS ST PT ∧\n  formTriangle Q R S QR RS QS ∧\n  formTriangle P Q S PQ QS PS ∧\n  P.opposingSides R QS ∧ Q.sameSide R PS ∧\n  Q.opposingSides T PS ∧ P.sameSide T QS ∧\n  ∠ R:Q:S = ∠ S:P:T ∧\n  |(P─T)| = |(Q─R)| ∧\n  |(P─Q)| = |(Q─S)| ∧\n  |(Q─S)| = |(S─P)| →\n  congruentTriangle P S T Q S R:=\nby"}
{"name": "Parallel16", "uuid": "042f5769-6f54-4dd6-9065-a2d9547cf67f", "statement_id": "7f39a531-9924-449c-82de-d5ce2a4127e2", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Parallel16 : ∀ (T V W U X : Point) (TV TW UX VW : Line),\n  distinctPointsOnLine T V TV ∧\n  distinctPointsOnLine T W TW ∧\n  distinctPointsOnLine U X UX ∧\n  distinctPointsOnLine V W VW ∧\n  TV.intersectsLine UX ∧ U.onLine TV ∧ between T U V ∧\n  TW.intersectsLine UX ∧ X.onLine TW ∧ between T X W ∧\n  TV.intersectsLine VW ∧\n  TW.intersectsLine VW ∧\n  ∠ T:U:X = ∠ T:W:V ∧\n  ¬ UX.intersectsLine VW →\n  ∠ U:V:W = ∠ T:W:V :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Parallel16 : ∀ (T V W U X : Point) (TV TW UX VW : Line),\n  distinctPointsOnLine T V TV ∧\n  distinctPointsOnLine T W TW ∧\n  distinctPointsOnLine U X UX ∧\n  distinctPointsOnLine V W VW ∧\n  TV.intersectsLine UX ∧ U.onLine TV ∧ between T U V ∧\n  TW.intersectsLine UX ∧ X.onLine TW ∧ between T X W ∧\n  TV.intersectsLine VW ∧\n  TW.intersectsLine VW ∧\n  ∠ T:U:X = ∠ T:W:V ∧\n  ¬ UX.intersectsLine VW →\n  ∠ U:V:W = ∠ T:W:V :=\nby"}
{"name": "Triangle10", "uuid": "4a482772-99b4-457b-9f34-2c58c2724f3e", "statement_id": "242999c1-4dc6-4288-807d-89e0625506d7", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Triangle10 : ∀ (Q S T R U V : Point) (QS ST TQ RU UV VR : Line),\n  formTriangle Q S T QS ST TQ ∧\n  formTriangle R U V RU UV VR ∧\n  ∠ U:R:V = ∠ S:T:Q ∧\n  |(R─V)| / |(Q─T)| = |(R─U)| / |(S─T)| →\n  ∠ R:U:V = ∠ Q:S:T :=\nby\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Triangle10 : ∀ (Q S T R U V : Point) (QS ST TQ RU UV VR : Line),\n  formTriangle Q S T QS ST TQ ∧\n  formTriangle R U V RU UV VR ∧\n  ∠ U:R:V = ∠ S:T:Q ∧\n  |(R─V)| / |(Q─T)| = |(R─U)| / |(S─T)| →\n  ∠ R:U:V = ∠ Q:S:T :=\nby"}
{"name": "IMO_2002_P2", "uuid": "b8f8dc6b-bcae-4d8d-b57e-4958e649b946", "statement_id": "263dc265-6eba-4020-bdc9-fa148d403885", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2002_P2 :\n  ∀ (A B C D E F I O : Point) (S : Circle) (DA AC L1 L2 : Line),\n    O.isCentre S ∧\n    B.onCircle S ∧ C.onCircle S ∧ A.onCircle S ∧\n    diameter B C O S ∧\n    ∠ A:O:B < 4 / 3 * ∟ ∧\n    D.onCircle S ∧\n    ∠ A:O:D = ∠ D:O:B ∧\n    distinctPointsOnLine D A DA ∧\n    distinctPointsOnLine A C AC ∧\n    O.onLine L1 ∧ ¬ L1.intersectsLine DA ∧ twoLinesIntersectAtPoint L1 AC I ∧\n    perpBisector O A L2 ∧\n    E.onLine L2 ∧ E.onCircle S ∧\n    F.onLine L2 ∧ F.onCircle S →\n  inCentre I C E F := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2002_P2 :\n  ∀ (A B C D E F I O : Point) (S : Circle) (DA AC L1 L2 : Line),\n    O.isCentre S ∧\n    B.onCircle S ∧ C.onCircle S ∧ A.onCircle S ∧\n    diameter B C O S ∧\n    ∠ A:O:B < 4 / 3 * ∟ ∧\n    D.onCircle S ∧\n    ∠ A:O:D = ∠ D:O:B ∧\n    distinctPointsOnLine D A DA ∧\n    distinctPointsOnLine A C AC ∧\n    O.onLine L1 ∧ ¬ L1.intersectsLine DA ∧ twoLinesIntersectAtPoint L1 AC I ∧\n    perpBisector O A L2 ∧\n    E.onLine L2 ∧ E.onCircle S ∧\n    F.onLine L2 ∧ F.onCircle S →\n  inCentre I C E F := by"}
{"name": "IMO_2005_P5", "uuid": "b8193efe-e21d-4a3d-bf14-8755fd7d7b93", "statement_id": "9aeb08dc-eec3-4efe-85d2-1842832971b8", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2005_P5 :\n  ∀ (A B C D E F P Q R X : Point)\n    (AB BC CD DA AC BD EF : Line)\n    (Ω1 Ω2 : Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    |(B─C)| = |(D─A)| ∧\n    BC.intersectsLine DA ∧\n    E.onLine BC ∧\n    F.onLine DA ∧\n    |(B─E)| = |(D─F)| ∧\n    twoLinesIntersectAtPoint AC BD P ∧\n    twoLinesIntersectAtPoint BD EF Q ∧\n    twoLinesIntersectAtPoint EF AC R ∧\n    circumCircle Ω1 P B C ∧\n    circumCircle Ω2 P D A ∧\n    circlesIntersectsAtTwoPoints Ω1 Ω2 P X →\n    cyclic P Q R X := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2005_P5 :\n  ∀ (A B C D E F P Q R X : Point)\n    (AB BC CD DA AC BD EF : Line)\n    (Ω1 Ω2 : Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    |(B─C)| = |(D─A)| ∧\n    BC.intersectsLine DA ∧\n    E.onLine BC ∧\n    F.onLine DA ∧\n    |(B─E)| = |(D─F)| ∧\n    twoLinesIntersectAtPoint AC BD P ∧\n    twoLinesIntersectAtPoint BD EF Q ∧\n    twoLinesIntersectAtPoint EF AC R ∧\n    circumCircle Ω1 P B C ∧\n    circumCircle Ω2 P D A ∧\n    circlesIntersectsAtTwoPoints Ω1 Ω2 P X →\n    cyclic P Q R X := by"}
{"name": "IMO_2015_P3", "uuid": "219d593f-6b6b-41b8-8531-3634a7c714eb", "statement_id": "98fd9925-247f-40cb-ab35-db5b72aedaf3", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2015_P3 :\n  ∀ (A B C H F M K Q D E O₁ O₂ : Point) (AB BC CA l : Line) (Γ Δ Θ : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| > |(A─C)| ∧\n    circumCircle Γ A B C ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    midpoint B M C ∧\n    Q.onCircle Γ ∧ ∠ H:Q:A = ∟ ∧\n    K.onCircle Γ ∧ ∠ H:K:Q = ∟ ∧\n    A ≠ B ∧ B ≠ C ∧ C ≠ K ∧ K ≠ Q ∧ Q ≠ A →\n    circumCircle Δ K Q H ∧\n    circumCircle Θ F K M ∧\n    O₁.isCentre Δ ∧\n    O₂.isCentre Θ ∧\n    tangentAtPoint K O₁ l Δ ∧\n    tangentAtPoint K O₂ l Θ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2015_P3 :\n  ∀ (A B C H F M K Q D E O₁ O₂ : Point) (AB BC CA l : Line) (Γ Δ Θ : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| > |(A─C)| ∧\n    circumCircle Γ A B C ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    midpoint B M C ∧\n    Q.onCircle Γ ∧ ∠ H:Q:A = ∟ ∧\n    K.onCircle Γ ∧ ∠ H:K:Q = ∟ ∧\n    A ≠ B ∧ B ≠ C ∧ C ≠ K ∧ K ≠ Q ∧ Q ≠ A →\n    circumCircle Δ K Q H ∧\n    circumCircle Θ F K M ∧\n    O₁.isCentre Δ ∧\n    O₂.isCentre Θ ∧\n    tangentAtPoint K O₁ l Δ ∧\n    tangentAtPoint K O₂ l Θ := by"}
{"name": "IMO_2004_P1", "uuid": "41b24b5e-6a20-4237-9dc0-166e0ae25968", "statement_id": "ea562dc7-93ab-42fe-b2d3-d865f7c58a37", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2004_P1 :\n  ∀ (A B C M N O R X : Point) (AB BC CA : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| ≠ |(A─C)| ∧\n    diameter B C O Ω ∧\n    M.onCircle Ω ∧\n    N.onCircle Ω ∧\n    between A M B ∧\n    between A N C ∧\n    midpoint B O C ∧\n    ∠ B:A:R = ∠ R:A:C ∧\n    ∠ M:O:R = ∠ R:O:N →\n  ∃ (X : Point), X.onLine BC ∧ cyclic B M R X ∧ cyclic C N R X := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2004_P1 :\n  ∀ (A B C M N O R X : Point) (AB BC CA : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| ≠ |(A─C)| ∧\n    diameter B C O Ω ∧\n    M.onCircle Ω ∧\n    N.onCircle Ω ∧\n    between A M B ∧\n    between A N C ∧\n    midpoint B O C ∧\n    ∠ B:A:R = ∠ R:A:C ∧\n    ∠ M:O:R = ∠ R:O:N →\n  ∃ (X : Point), X.onLine BC ∧ cyclic B M R X ∧ cyclic C N R X := by"}
{"name": "IMO_2006_P1", "uuid": "0e8a1611-6a2f-4fe0-a71d-4e7150ae2502", "statement_id": "87ce0544-2371-4727-aa32-bc081fa950cf", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2006_P1 :\n  ∀ (A B C I P : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    insideTriangle P A B C AB BC CA ∧\n    ∠ P:B:A + ∠ P:C:A = ∠ P:B:C + ∠ P:C:B →\n    |(A─P)| ≥ |(A─I)| ∧ (|(A─P)| = |(A─I)| ↔ P = I) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2006_P1 :\n  ∀ (A B C I P : Point) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    insideTriangle P A B C AB BC CA ∧\n    ∠ P:B:A + ∠ P:C:A = ∠ P:B:C + ∠ P:C:B →\n    |(A─P)| ≥ |(A─I)| ∧ (|(A─P)| = |(A─I)| ↔ P = I) := by"}
{"name": "IMO_2018_P6", "uuid": "33bf1e28-688c-404a-b3c4-6a36993f5ca7", "statement_id": "81d1390d-fc7f-436e-9d41-8ea0f82bcbce", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2018_P6 :\n  ∀ (A B C D X : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    |(A─B)| * |(C─D)| = |(B─C)| * |(D─A)| ∧\n    insideQuadrilateral X A B C D AB BC CD DA ∧\n    ∠ X:A:B = ∠ X:C:D ∧\n    ∠ X:B:C = ∠ X:D:A →\n    ∠ B:X:A + ∠ D:X:C = ∟ + ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2018_P6 :\n  ∀ (A B C D X : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    |(A─B)| * |(C─D)| = |(B─C)| * |(D─A)| ∧\n    insideQuadrilateral X A B C D AB BC CD DA ∧\n    ∠ X:A:B = ∠ X:C:D ∧\n    ∠ X:B:C = ∠ X:D:A →\n    ∠ B:X:A + ∠ D:X:C = ∟ + ∟ := by"}
{"name": "IMO_2008_P6", "uuid": "334332b6-da29-49f2-892e-82b4d9c12a3d", "statement_id": "519f04f9-92dc-4746-ba9d-798c6a178d5f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2008_P6 :\n  ∀ (A B C D : Point) (AB BC CD DA CA : Line) (ω₁ ω₂ ω : Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧ ¬ (|(A─B)| = |(B─C)|) ∧\n    inCircle ω₁ AB BC CA ∧ inCircle ω₂ CD DA CA ∧\n    tangentLine AB ω ∧ tangentLine BC ω ∧ tangentLine DA ω ∧ tangentLine CD ω →\n  ∃ (l₁ l₂ : Line) (X : Point),\n    tangentLine l₁ ω₁ ∧ tangentLine l₁ ω₂ ∧ tangentLine l₂ ω₁ ∧ tangentLine l₂ ω₂ ∧\n    twoLinesIntersectAtPoint l₁ l₂ X ∧ X.onCircle ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2008_P6 :\n  ∀ (A B C D : Point) (AB BC CD DA CA : Line) (ω₁ ω₂ ω : Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧ ¬ (|(A─B)| = |(B─C)|) ∧\n    inCircle ω₁ AB BC CA ∧ inCircle ω₂ CD DA CA ∧\n    tangentLine AB ω ∧ tangentLine BC ω ∧ tangentLine DA ω ∧ tangentLine CD ω →\n  ∃ (l₁ l₂ : Line) (X : Point),\n    tangentLine l₁ ω₁ ∧ tangentLine l₁ ω₂ ∧ tangentLine l₂ ω₁ ∧ tangentLine l₂ ω₂ ∧\n    twoLinesIntersectAtPoint l₁ l₂ X ∧ X.onCircle ω := by"}
{"name": "IMO_2016_P1", "uuid": "a0338c3b-c86a-452c-8a93-1f94ff8b661e", "statement_id": "3b6f47a0-1bf7-4a56-a272-69d0b251159f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2016_P1 :\n  ∀ (B C F A D E M X : Point)\n    (BC CF FB AM MX XE EA BD FX ME : Line),\n    formTriangle B C F BC CF FB ∧\n    ∠ C:B:F = ∟ ∧\n    A.onLine CF ∧ between A F C ∧ |(F─A)| = |(F─B)| ∧\n    |(D─A)| = |(D─C)| ∧ ∠ D:A:C = ∠ C:A:B ∧\n    |(E─A)| = |(E─D)| ∧ ∠ E:A:D = ∠ D:A:C ∧\n    between C M F ∧ |(C─M)| = |(M─F)| ∧\n    parallelogram A M X E AM MX XE EA →\n    concurrent BD FX ME := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2016_P1 :\n  ∀ (B C F A D E M X : Point)\n    (BC CF FB AM MX XE EA BD FX ME : Line),\n    formTriangle B C F BC CF FB ∧\n    ∠ C:B:F = ∟ ∧\n    A.onLine CF ∧ between A F C ∧ |(F─A)| = |(F─B)| ∧\n    |(D─A)| = |(D─C)| ∧ ∠ D:A:C = ∠ C:A:B ∧\n    |(E─A)| = |(E─D)| ∧ ∠ E:A:D = ∠ D:A:C ∧\n    between C M F ∧ |(C─M)| = |(M─F)| ∧\n    parallelogram A M X E AM MX XE EA →\n    concurrent BD FX ME := by"}
{"name": "IMO_2022_P4", "uuid": "f9648a79-6160-479d-81f5-b2bc5b9203d9", "statement_id": "5c2e6b32-5a44-46c2-8f33-6dac250bf94d", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2022_P4 :\n  ∀ (A B C D E T P Q R S : Point)\n    (AB BC CD DE EA CT DT : Line),\n    formPentagon A B C D E AB BC CD DE EA ∧\n    |(B─C)| = |(D─E)| ∧\n    T.sameSide A BC ∧ T.sameSide B CD ∧ T.sameSide C DE ∧ T.sameSide D EA ∧ T.sameSide E AB ∧\n    |(T─B)| = |(T─D)| ∧\n    |(T─C)| = |(T─E)| ∧\n    ∠ A:B:T = ∠ T:E:A ∧\n    distinctPointsOnLine C T CT ∧\n    distinctPointsOnLine D T DT ∧\n    P.onLine AB ∧ P.onLine CD ∧\n    Q.onLine AB ∧ Q.onLine CT ∧\n    between P B A ∧ between B A Q ∧\n    R.onLine EA ∧ R.onLine CD ∧\n    S.onLine EA ∧ S.onLine DT ∧\n    between R E A ∧ between E A S →\n    cyclic P S Q R := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2022_P4 :\n  ∀ (A B C D E T P Q R S : Point)\n    (AB BC CD DE EA CT DT : Line),\n    formPentagon A B C D E AB BC CD DE EA ∧\n    |(B─C)| = |(D─E)| ∧\n    T.sameSide A BC ∧ T.sameSide B CD ∧ T.sameSide C DE ∧ T.sameSide D EA ∧ T.sameSide E AB ∧\n    |(T─B)| = |(T─D)| ∧\n    |(T─C)| = |(T─E)| ∧\n    ∠ A:B:T = ∠ T:E:A ∧\n    distinctPointsOnLine C T CT ∧\n    distinctPointsOnLine D T DT ∧\n    P.onLine AB ∧ P.onLine CD ∧\n    Q.onLine AB ∧ Q.onLine CT ∧\n    between P B A ∧ between B A Q ∧\n    R.onLine EA ∧ R.onLine CD ∧\n    S.onLine EA ∧ S.onLine DT ∧\n    between R E A ∧ between E A S →\n    cyclic P S Q R := by"}
{"name": "IMO_2001_P1", "uuid": "4c0a172f-f2f7-47bb-b928-24b6501a6838", "statement_id": "b40cdcad-2421-4939-b5a2-3142864e4ce6", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2001_P1 :\n  ∀ (A B C P O : Point) (AB BC CA : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A P BC ∧\n    circumCentre O A B C ∧\n    ∠ A:C:B ≥ ∠ C:B:A + ∟/3 →\n    ∠ B:A:C + ∠ C:O:P < ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2001_P1 :\n  ∀ (A B C P O : Point) (AB BC CA : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A P BC ∧\n    circumCentre O A B C ∧\n    ∠ A:C:B ≥ ∠ C:B:A + ∟/3 →\n    ∠ B:A:C + ∠ C:O:P < ∟ := by"}
{"name": "IMO_2023_P6", "uuid": "a46ed62f-1569-4460-a1f8-7c91733aee92", "statement_id": "a73903be-5801-44f8-871f-13db7a58d7c2", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2023_P6 :\n  ∀ (A B C A1 B1 C1 A2 B2 C2 : Point)\n    (AB BC CA l1 l2 l3 l4 l5 l6 : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| ∧\n    insideTriangle A1 A B C AB BC CA ∧\n    insideTriangle B1 A B C AB BC CA ∧\n    insideTriangle C1 A B C AB BC CA ∧\n    |(B─A1)| = |(A1─C)| ∧\n    |(C─B1)| = |(B1─A)| ∧\n    |(A─C1)| = |(C1─B)| ∧\n    ∠ B:A1:C + ∠ C:B1:A + ∠ A:C1:B = (16/3) * ∟ ∧\n    distinctPointsOnLine B C1 l1 ∧ distinctPointsOnLine C B1 l2 ∧\n    A2.onLine l1 ∧ A2.onLine l2 ∧\n    distinctPointsOnLine C A1 l3 ∧ distinctPointsOnLine A C1 l4 ∧\n    B2.onLine l3 ∧ B2.onLine l4 ∧\n    distinctPointsOnLine A B1 l5 ∧ distinctPointsOnLine B A1 l6 ∧\n    C2.onLine l5 ∧ C2.onLine l6 ∧\n    |(A1─B1)| ≠ |(B1─C1)| ∧ |(B1─C1)| ≠ |(C1─A1)| ∧ |(C1─A1)| ≠ |(A1─B1)| →\n  ∃ (Ω1 Ω2 Ω3 : Circle) (X Y : Point),\n    circumCircle Ω1 A A1 A2 ∧ circumCircle Ω2 B B1 B2 ∧ circumCircle Ω3 C C1 C2 ∧\n    X.onCircle Ω1 ∧ X.onCircle Ω2 ∧ X.onCircle Ω3 ∧\n    Y.onCircle Ω1 ∧ Y.onCircle Ω2 ∧ Y.onCircle Ω3 ∧\n    X ≠ Y := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2023_P6 :\n  ∀ (A B C A1 B1 C1 A2 B2 C2 : Point)\n    (AB BC CA l1 l2 l3 l4 l5 l6 : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| ∧\n    insideTriangle A1 A B C AB BC CA ∧\n    insideTriangle B1 A B C AB BC CA ∧\n    insideTriangle C1 A B C AB BC CA ∧\n    |(B─A1)| = |(A1─C)| ∧\n    |(C─B1)| = |(B1─A)| ∧\n    |(A─C1)| = |(C1─B)| ∧\n    ∠ B:A1:C + ∠ C:B1:A + ∠ A:C1:B = (16/3) * ∟ ∧\n    distinctPointsOnLine B C1 l1 ∧ distinctPointsOnLine C B1 l2 ∧\n    A2.onLine l1 ∧ A2.onLine l2 ∧\n    distinctPointsOnLine C A1 l3 ∧ distinctPointsOnLine A C1 l4 ∧\n    B2.onLine l3 ∧ B2.onLine l4 ∧\n    distinctPointsOnLine A B1 l5 ∧ distinctPointsOnLine B A1 l6 ∧\n    C2.onLine l5 ∧ C2.onLine l6 ∧\n    |(A1─B1)| ≠ |(B1─C1)| ∧ |(B1─C1)| ≠ |(C1─A1)| ∧ |(C1─A1)| ≠ |(A1─B1)| →\n  ∃ (Ω1 Ω2 Ω3 : Circle) (X Y : Point),\n    circumCircle Ω1 A A1 A2 ∧ circumCircle Ω2 B B1 B2 ∧ circumCircle Ω3 C C1 C2 ∧\n    X.onCircle Ω1 ∧ X.onCircle Ω2 ∧ X.onCircle Ω3 ∧\n    Y.onCircle Ω1 ∧ Y.onCircle Ω2 ∧ Y.onCircle Ω3 ∧\n    X ≠ Y := by"}
{"name": "IMO_2003_P4", "uuid": "0c1f013d-c402-4da6-9d67-4043e2dc2335", "statement_id": "cfb3545a-b737-470f-b17a-51b2be9c83c1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2003_P4 :\n  ∀ (A B C D P Q R X : Point) (BC CA AB : Line),\n    cyclic A B C D ∧\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine C A CA ∧\n    distinctPointsOnLine A B AB ∧\n    foot D P BC ∧\n    foot D Q CA ∧\n    foot D R AB →\n  (|(P─Q)| = |(Q─R)| ↔ ∃ X : Point, X.onLine CA ∧ ∠A:B:X = ∠X:B:C ∧ ∠A:D:X = ∠X:D:C) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2003_P4 :\n  ∀ (A B C D P Q R X : Point) (BC CA AB : Line),\n    cyclic A B C D ∧\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine C A CA ∧\n    distinctPointsOnLine A B AB ∧\n    foot D P BC ∧\n    foot D Q CA ∧\n    foot D R AB →\n  (|(P─Q)| = |(Q─R)| ↔ ∃ X : Point, X.onLine CA ∧ ∠A:B:X = ∠X:B:C ∧ ∠A:D:X = ∠X:D:C) := by"}
{"name": "IMO_2008_P1", "uuid": "10d2431a-27b8-4954-96ac-f8d17cdbff7a", "statement_id": "27298ce5-d53d-41da-9f8a-6fce0b0f583d", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2008_P1 :\n  ∀ (A B C H D E F A1 A2 B1 B2 C1 C2 MBC MCA MAB : Point) (AB BC CA : Line) (ΓA ΓB ΓC : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    midpoint B MBC C ∧\n    MBC.isCentre ΓA ∧\n    H.onCircle ΓA ∧\n    distinctPointsOnLine A1 A2 BC ∧\n    A1.onCircle ΓA ∧\n    A2.onCircle ΓA ∧\n    midpoint C MCA A ∧\n    MCA.isCentre ΓB ∧\n    H.onCircle ΓB ∧\n    distinctPointsOnLine B1 B2 CA ∧\n    B1.onCircle ΓB ∧\n    B2.onCircle ΓB ∧\n    midpoint A MAB B ∧\n    MAB.isCentre ΓC ∧\n    H.onCircle ΓC ∧\n    distinctPointsOnLine C1 C2 AB ∧\n    C1.onCircle ΓC ∧\n    C2.onCircle ΓC\n  → ∃ (Ω : Circle), A1.onCircle Ω ∧ A2.onCircle Ω ∧ B1.onCircle Ω ∧ B2.onCircle Ω ∧ C1.onCircle Ω ∧ C2.onCircle Ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2008_P1 :\n  ∀ (A B C H D E F A1 A2 B1 B2 C1 C2 MBC MCA MAB : Point) (AB BC CA : Line) (ΓA ΓB ΓC : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    orthoCentre H A B C D E F AB BC CA ∧\n    midpoint B MBC C ∧\n    MBC.isCentre ΓA ∧\n    H.onCircle ΓA ∧\n    distinctPointsOnLine A1 A2 BC ∧\n    A1.onCircle ΓA ∧\n    A2.onCircle ΓA ∧\n    midpoint C MCA A ∧\n    MCA.isCentre ΓB ∧\n    H.onCircle ΓB ∧\n    distinctPointsOnLine B1 B2 CA ∧\n    B1.onCircle ΓB ∧\n    B2.onCircle ΓB ∧\n    midpoint A MAB B ∧\n    MAB.isCentre ΓC ∧\n    H.onCircle ΓC ∧\n    distinctPointsOnLine C1 C2 AB ∧\n    C1.onCircle ΓC ∧\n    C2.onCircle ΓC\n  → ∃ (Ω : Circle), A1.onCircle Ω ∧ A2.onCircle Ω ∧ B1.onCircle Ω ∧ B2.onCircle Ω ∧ C1.onCircle Ω ∧ C2.onCircle Ω := by"}
{"name": "IMO_2007_P4", "uuid": "b0e15a38-2840-463b-aff2-abf7dbf4cdd4", "statement_id": "8373d17e-56ff-497c-816b-b8123d52456c", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2007_P4 :\n  ∀ (A B C R P Q K L : Point) (AB BC CA L1 L2 : Line) (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    R.onCircle Ω ∧\n    R ≠ C ∧\n    ∠ B:C:R = ∠ R:C:A ∧\n    perpBisector B C L1 ∧ P.onLine L1 ∧ ∠ B:C:P = ∠ P:C:A ∧\n    perpBisector A C L2 ∧ Q.onLine L2 ∧ ∠ B:C:Q = ∠ Q:C:A ∧\n    midpoint B K C ∧ midpoint A L C\n    → (△ R P K).area = (△ R Q L).area := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2007_P4 :\n  ∀ (A B C R P Q K L : Point) (AB BC CA L1 L2 : Line) (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCircle Ω A B C ∧\n    R.onCircle Ω ∧\n    R ≠ C ∧\n    ∠ B:C:R = ∠ R:C:A ∧\n    perpBisector B C L1 ∧ P.onLine L1 ∧ ∠ B:C:P = ∠ P:C:A ∧\n    perpBisector A C L2 ∧ Q.onLine L2 ∧ ∠ B:C:Q = ∠ Q:C:A ∧\n    midpoint B K C ∧ midpoint A L C\n    → (△ R P K).area = (△ R Q L).area := by"}
{"name": "IMO_2019_P6", "uuid": "a90b5618-2ca0-4666-bdf2-7031d4b00e47", "statement_id": "34f3381a-2813-4d14-83b5-ad3830b17009", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2019_P6 :\n  ∀ (A B C I D E F R P Q X : Point)\n    (ω : Circle)\n    (BC CA AB EF Ld ARline AIline DIline PQline Lperp : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| ≠ |(A─C)| ∧\n    inCircle ω AB BC CA ∧\n    inCentre I A B C ∧\n    tangentAtPoint D I BC ω ∧\n    tangentAtPoint E I CA ω ∧\n    tangentAtPoint F I AB ω ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine D R Ld ∧\n    perpLineatPoint Ld EF D ∧\n    R.onCircle ω ∧\n    distinctPointsOnLine A R ARline ∧\n    P.onLine ARline ∧\n    P.onCircle ω ∧\n    P ≠ R ∧\n    cyclic P C E Q ∧\n    cyclic P B F Q ∧\n    Q ≠ P ∧\n    distinctPointsOnLine A I AIline ∧\n    distinctPointsOnLine D I DIline ∧\n    distinctPointsOnLine P Q PQline ∧\n    twoLinesIntersectAtPoint DIline PQline X ∧\n    perpLineatPoint Lperp AIline A\n    → X.onLine Lperp :=\n  by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2019_P6 :\n  ∀ (A B C I D E F R P Q X : Point)\n    (ω : Circle)\n    (BC CA AB EF Ld ARline AIline DIline PQline Lperp : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| ≠ |(A─C)| ∧\n    inCircle ω AB BC CA ∧\n    inCentre I A B C ∧\n    tangentAtPoint D I BC ω ∧\n    tangentAtPoint E I CA ω ∧\n    tangentAtPoint F I AB ω ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine D R Ld ∧\n    perpLineatPoint Ld EF D ∧\n    R.onCircle ω ∧\n    distinctPointsOnLine A R ARline ∧\n    P.onLine ARline ∧\n    P.onCircle ω ∧\n    P ≠ R ∧\n    cyclic P C E Q ∧\n    cyclic P B F Q ∧\n    Q ≠ P ∧\n    distinctPointsOnLine A I AIline ∧\n    distinctPointsOnLine D I DIline ∧\n    distinctPointsOnLine P Q PQline ∧\n    twoLinesIntersectAtPoint DIline PQline X ∧\n    perpLineatPoint Lperp AIline A\n    → X.onLine Lperp :=\n  by"}
{"name": "IMO_2011_P6", "uuid": "6c2c0ac1-8ff5-4c5f-905c-8a223d644414", "statement_id": "4a215e92-05aa-4442-99c4-a246a7a4542b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2011_P6 :\n  ∀ (A B C A' B' C' P O : Point) (ℓ ℓ_a ℓ_b ℓ_c : Line) (Γ Δ : Circle),\n    acuteTriangle A B C ∧\n    circumCircle Γ A B C ∧\n    O.isCentre Γ ∧\n    tangentAtPoint P O ℓ Γ ∧\n    reflectLine ℓ BC ℓ_a ∧\n    reflectLine ℓ CA ℓ_b ∧\n    reflectLine ℓ AB ℓ_c ∧\n    twoLinesIntersectAtPoint ℓ_b ℓ_c A' ∧\n    twoLinesIntersectAtPoint ℓ_c ℓ_a B' ∧\n    twoLinesIntersectAtPoint ℓ_a ℓ_b C' ∧\n    circumCircle Δ A' B' C' →\n    tangentCircles Γ Δ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2011_P6 :\n  ∀ (A B C A' B' C' P O : Point) (ℓ ℓ_a ℓ_b ℓ_c : Line) (Γ Δ : Circle),\n    acuteTriangle A B C ∧\n    circumCircle Γ A B C ∧\n    O.isCentre Γ ∧\n    tangentAtPoint P O ℓ Γ ∧\n    reflectLine ℓ BC ℓ_a ∧\n    reflectLine ℓ CA ℓ_b ∧\n    reflectLine ℓ AB ℓ_c ∧\n    twoLinesIntersectAtPoint ℓ_b ℓ_c A' ∧\n    twoLinesIntersectAtPoint ℓ_c ℓ_a B' ∧\n    twoLinesIntersectAtPoint ℓ_a ℓ_b C' ∧\n    circumCircle Δ A' B' C' →\n    tangentCircles Γ Δ := by"}
{"name": "IMO_2021_P4", "uuid": "29620177-479e-4178-a620-a6a2be50cd7d", "statement_id": "d2e71985-d6cd-4c27-be0d-d0208423fcad", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2021_P4 :\n  ∀ (A B C D I X Y Z T : Point) (Γ Ω : Circle) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    I.isCentre Γ ∧\n    tangentLine AB Γ ∧ tangentLine BC Γ ∧ tangentLine CD Γ ∧ tangentLine DA Γ ∧\n    circumCircle Ω A I C ∧\n    X.onCircle Ω ∧ between B A X ∧\n    Z.onCircle Ω ∧ between B C Z ∧\n    Y.onCircle Ω ∧ between A D Y ∧\n    T.onCircle Ω ∧ between C D T →\n    |(A─D)| + |(D─T)| + |(T─X)| + |(X─A)| =\n    |(C─D)| + |(D─Y)| + |(Y─Z)| + |(Z─C)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2021_P4 :\n  ∀ (A B C D I X Y Z T : Point) (Γ Ω : Circle) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    I.isCentre Γ ∧\n    tangentLine AB Γ ∧ tangentLine BC Γ ∧ tangentLine CD Γ ∧ tangentLine DA Γ ∧\n    circumCircle Ω A I C ∧\n    X.onCircle Ω ∧ between B A X ∧\n    Z.onCircle Ω ∧ between B C Z ∧\n    Y.onCircle Ω ∧ between A D Y ∧\n    T.onCircle Ω ∧ between C D T →\n    |(A─D)| + |(D─T)| + |(T─X)| + |(X─A)| =\n    |(C─D)| + |(D─Y)| + |(Y─Z)| + |(Z─C)| := by"}
{"name": "imo2013_p3", "uuid": "80273423-0dad-4919-9a34-1a0aec13db75", "statement_id": "a78282d8-0c6c-4639-9199-6fdffd1f37dd", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem imo2013_p3 :\n  ∀ (A B C Ia Ib Ic A1 B1 C1 O1 : Point)\n    (exA exB exC Ω : Circle)\n    (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    exCentre Ia A B C ∧ exCentre Ib B C A ∧ exCentre Ic C A B ∧\n    Ia.isCentre exA ∧ tangentAtPoint A1 Ia BC exA ∧ between B A1 C ∧\n    Ib.isCentre exB ∧ tangentAtPoint B1 Ib CA exB ∧ between C B1 A ∧\n    Ic.isCentre exC ∧ tangentAtPoint C1 Ic AB exC ∧ between A C1 B ∧\n    circumCentre O1 A1 B1 C1 ∧ circumCircle Ω A B C ∧\n    O1.onCircle Ω\n    → rightTriangle A B C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem imo2013_p3 :\n  ∀ (A B C Ia Ib Ic A1 B1 C1 O1 : Point)\n    (exA exB exC Ω : Circle)\n    (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    exCentre Ia A B C ∧ exCentre Ib B C A ∧ exCentre Ic C A B ∧\n    Ia.isCentre exA ∧ tangentAtPoint A1 Ia BC exA ∧ between B A1 C ∧\n    Ib.isCentre exB ∧ tangentAtPoint B1 Ib CA exB ∧ between C B1 A ∧\n    Ic.isCentre exC ∧ tangentAtPoint C1 Ic AB exC ∧ between A C1 B ∧\n    circumCentre O1 A1 B1 C1 ∧ circumCircle Ω A B C ∧\n    O1.onCircle Ω\n    → rightTriangle A B C := by"}
{"name": "IMO_2012_P5", "uuid": "6dfa42be-d448-456d-9fe5-e1bea2e13aad", "statement_id": "d18b413e-5ed1-4c9c-a8ed-ebc7e86eae76", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2012_P5 :\n  ∀ (A B C D X K L M : Point) (AB BC CA AL BK : Line),\n    formTriangle A B C AB BC CA ∧ ∠ B:C:A = ∟ ∧ foot C D AB ∧\n    between C X D ∧ between A K X ∧ |(B─K)| = |(B─C)| ∧\n    between B L X ∧ |(A─L)| = |(A─C)| ∧\n    distinctPointsOnLine A L AL ∧ distinctPointsOnLine B K BK ∧\n    M.onLine AL ∧ M.onLine BK →\n    |(M─K)| = |(M─L)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2012_P5 :\n  ∀ (A B C D X K L M : Point) (AB BC CA AL BK : Line),\n    formTriangle A B C AB BC CA ∧ ∠ B:C:A = ∟ ∧ foot C D AB ∧\n    between C X D ∧ between A K X ∧ |(B─K)| = |(B─C)| ∧\n    between B L X ∧ |(A─L)| = |(A─C)| ∧\n    distinctPointsOnLine A L AL ∧ distinctPointsOnLine B K BK ∧\n    M.onLine AL ∧ M.onLine BK →\n    |(M─K)| = |(M─L)| := by"}
{"name": "IMO_2019_P2", "uuid": "408ed475-8d19-4c8b-8ee5-ec2070995e6c", "statement_id": "106d20cc-8b96-4d89-b88a-270d09697a47", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2019_P2 :\n  ∀ (A B C A1 B1 P Q P1 Q1 : Point)\n    (BC AC AA1 BB1 PQ AB PB1 QA1 : Line),\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine A C AC ∧\n    distinctPointsOnLine A A1 AA1 ∧\n    distinctPointsOnLine B B1 BB1 ∧\n    between B A1 C ∧\n    between A B1 C ∧\n    between A P A1 ∧\n    between B Q B1 ∧\n    distinctPointsOnLine P Q PQ ∧\n    distinctPointsOnLine A B AB ∧\n    ¬ AB.intersectsLine PQ ∧\n    distinctPointsOnLine P B1 PB1 ∧\n    P1.onLine PB1 ∧\n    between P B1 P1 ∧\n    distinctPointsOnLine Q A1 QA1 ∧\n    Q1.onLine QA1 ∧\n    between Q A1 Q1 ∧\n    ∠ P:P1:C = ∠ B:A:C ∧\n    ∠ C:Q1:Q = ∠ C:B:A →\n    cyclic P Q P1 Q1 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2019_P2 :\n  ∀ (A B C A1 B1 P Q P1 Q1 : Point)\n    (BC AC AA1 BB1 PQ AB PB1 QA1 : Line),\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine A C AC ∧\n    distinctPointsOnLine A A1 AA1 ∧\n    distinctPointsOnLine B B1 BB1 ∧\n    between B A1 C ∧\n    between A B1 C ∧\n    between A P A1 ∧\n    between B Q B1 ∧\n    distinctPointsOnLine P Q PQ ∧\n    distinctPointsOnLine A B AB ∧\n    ¬ AB.intersectsLine PQ ∧\n    distinctPointsOnLine P B1 PB1 ∧\n    P1.onLine PB1 ∧\n    between P B1 P1 ∧\n    distinctPointsOnLine Q A1 QA1 ∧\n    Q1.onLine QA1 ∧\n    between Q A1 Q1 ∧\n    ∠ P:P1:C = ∠ B:A:C ∧\n    ∠ C:Q1:Q = ∠ C:B:A →\n    cyclic P Q P1 Q1 := by"}
{"name": "IMO_2010_P2", "uuid": "c924616b-6de4-4d40-bb75-2956ce1ef294", "statement_id": "f14aca81-dc60-41fc-9604-1c518758ac70", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2010_P2 :\n  ∀ (A B C D E F G I X : Point) (Γ : Circle) (AB BC CA AI EI DG : Line),\n    distinctPointsOnLine A B AB ∧\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine C A CA ∧\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    circumCircle Γ A B C ∧\n    distinctPointsOnLine A I AI ∧\n    D.onCircle Γ ∧\n    D.onLine AI ∧\n    D ≠ A ∧\n    distinctPointsOnLine E I EI ∧\n    E.onCircle Γ ∧\n    E.opposingSides A E BC ∧\n    between B F C ∧\n    ∠ B:A:F = ∠ C:A:E ∧\n    (∠ B:A:F + ∠ B:A:F < ∠ B:A:C) ∧\n    midpoint I G F ∧\n    distinctPointsOnLine D G DG ∧\n    X.onLine EI ∧\n    X.onLine DG →\n    X.onCircle Γ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2010_P2 :\n  ∀ (A B C D E F G I X : Point) (Γ : Circle) (AB BC CA AI EI DG : Line),\n    distinctPointsOnLine A B AB ∧\n    distinctPointsOnLine B C BC ∧\n    distinctPointsOnLine C A CA ∧\n    formTriangle A B C AB BC CA ∧\n    inCentre I A B C ∧\n    circumCircle Γ A B C ∧\n    distinctPointsOnLine A I AI ∧\n    D.onCircle Γ ∧\n    D.onLine AI ∧\n    D ≠ A ∧\n    distinctPointsOnLine E I EI ∧\n    E.onCircle Γ ∧\n    E.opposingSides A E BC ∧\n    between B F C ∧\n    ∠ B:A:F = ∠ C:A:E ∧\n    (∠ B:A:F + ∠ B:A:F < ∠ B:A:C) ∧\n    midpoint I G F ∧\n    distinctPointsOnLine D G DG ∧\n    X.onLine EI ∧\n    X.onLine DG →\n    X.onCircle Γ := by"}
{"name": "IMO_2009_P2", "uuid": "5af720ed-3c5d-465c-941d-f1c2b3ddd1b5", "statement_id": "762ea0fa-6204-4d4e-a5a7-cf698a110e38", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2009_P2 :\n  ∀ (A B C O P Q K L M OΓ : Point) (AB BC CA PQ : Line) (Γ : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    P.onLine CA ∧ between C P A ∧\n    Q.onLine AB ∧ between A Q B ∧\n    midpoint B K P ∧\n    midpoint C L Q ∧\n    midpoint P M Q ∧\n    circumCircle Γ K L M ∧\n    tangentAtPoint M OΓ PQ Γ →\n    |(O─P)| = |(O─Q)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2009_P2 :\n  ∀ (A B C O P Q K L M OΓ : Point) (AB BC CA PQ : Line) (Γ : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    P.onLine CA ∧ between C P A ∧\n    Q.onLine AB ∧ between A Q B ∧\n    midpoint B K P ∧\n    midpoint C L Q ∧\n    midpoint P M Q ∧\n    circumCircle Γ K L M ∧\n    tangentAtPoint M OΓ PQ Γ →\n    |(O─P)| = |(O─Q)| := by"}
{"name": "IMO_2020_P1", "uuid": "a70265fb-d54b-467d-a0a9-9d8ea495a1ca", "statement_id": "19718020-d050-400d-8599-a2c3e22595cd", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2020_P1 :\n  ∀ (A B C D P : Point) (AB BC CD DA l1 l2 l3 : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    insideQuadrilateral P A B C D AB BC CD DA ∧\n    ∠ P:B:A = 2 * ∠ P:A:D ∧\n    ∠ D:P:A = 3 * ∠ P:A:D ∧\n    ∠ B:A:P = 2 * ∠ C:B:P ∧\n    ∠ B:P:C = 3 * ∠ C:B:P ∧\n    D.onLine l1 ∧\n    (∀ (X : Point), X.onLine l1 → ∠ A:D:X = ∠ P:D:X) ∧\n    A.opposingSides P l1 ∧\n    C.onLine l2 ∧\n    (∀ (X : Point), X.onLine l2 → ∠ P:C:X = ∠ B:C:X) ∧\n    P.opposingSides B l2 ∧\n    perpBisector A B l3 →\n  concurrent l1 l2 l3 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2020_P1 :\n  ∀ (A B C D P : Point) (AB BC CD DA l1 l2 l3 : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    insideQuadrilateral P A B C D AB BC CD DA ∧\n    ∠ P:B:A = 2 * ∠ P:A:D ∧\n    ∠ D:P:A = 3 * ∠ P:A:D ∧\n    ∠ B:A:P = 2 * ∠ C:B:P ∧\n    ∠ B:P:C = 3 * ∠ C:B:P ∧\n    D.onLine l1 ∧\n    (∀ (X : Point), X.onLine l1 → ∠ A:D:X = ∠ P:D:X) ∧\n    A.opposingSides P l1 ∧\n    C.onLine l2 ∧\n    (∀ (X : Point), X.onLine l2 → ∠ P:C:X = ∠ B:C:X) ∧\n    P.opposingSides B l2 ∧\n    perpBisector A B l3 →\n  concurrent l1 l2 l3 := by"}
{"name": "IMO_2015_P4", "uuid": "7d56a16c-cce4-4c47-ad32-4d9b1b81db00", "statement_id": "d4456670-cf3b-4ba5-86d3-e5df4c4e9b8a", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2015_P4 :\n  ∀ (A B C O D E F G K L X : Point) (BC AB CA : Line) (Ω Γ : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    circumCircle Ω A B C ∧\n    O.isCentre Ω ∧\n    A.isCentre Γ ∧\n    distinctPointsOnLine B C BC ∧\n    D.onLine BC ∧ E.onLine BC ∧\n    between B D C ∧ between B E C ∧ D ≠ E ∧\n    circlesIntersectsAtTwoPoints Γ Ω F G ∧\n    cyclic B D F K ∧ between A K B ∧\n    cyclic C G E L ∧ between C L A ∧\n    ¬ coll F G K ∧\n    coll F K X ∧ coll G L X\n    → coll A O X := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2015_P4 :\n  ∀ (A B C O D E F G K L X : Point) (BC AB CA : Line) (Ω Γ : Circle),\n    formTriangle A B C AB BC CA ∧\n    circumCentre O A B C ∧\n    circumCircle Ω A B C ∧\n    O.isCentre Ω ∧\n    A.isCentre Γ ∧\n    distinctPointsOnLine B C BC ∧\n    D.onLine BC ∧ E.onLine BC ∧\n    between B D C ∧ between B E C ∧ D ≠ E ∧\n    circlesIntersectsAtTwoPoints Γ Ω F G ∧\n    cyclic B D F K ∧ between A K B ∧\n    cyclic C G E L ∧ between C L A ∧\n    ¬ coll F G K ∧\n    coll F K X ∧ coll G L X\n    → coll A O X := by"}
{"name": "IMO_2024_P4", "uuid": "792e5279-e406-40f7-b893-9b212b3d4f42", "statement_id": "98d362b7-ec99-46f2-84be-113380939847", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2024_P4 :\n  ∀ (A B C I X Y P K L : Point) (AB BC AC AI LX LY : Line) (Ω Γ : Circle),\n    formTriangle A B C AB BC AC ∧\n    |(A─B)| < |(A─C)| ∧\n    |(A─C)| < |(B─C)| ∧\n    inCentre I A B C ∧\n    I.isCentre Ω ∧\n    inCircle Ω AB BC AC ∧\n    distinctPointsOnLine X C BC ∧\n    X.onLine LX ∧\n    ¬ LX.intersectsLine AC ∧\n    tangentLine LX Ω ∧\n    distinctPointsOnLine Y B BC ∧\n    Y.onLine LY ∧\n    ¬ LY.intersectsLine AB ∧\n    tangentLine LY Ω ∧\n    circumCircle Γ A B C ∧\n    P.onLine AI ∧\n    P.onCircle Γ ∧\n    P ≠ A ∧\n    midpoint A K C ∧\n    midpoint A L B →\n  ∠ K:I:L + ∠ Y:P:X = ∟ + ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2024_P4 :\n  ∀ (A B C I X Y P K L : Point) (AB BC AC AI LX LY : Line) (Ω Γ : Circle),\n    formTriangle A B C AB BC AC ∧\n    |(A─B)| < |(A─C)| ∧\n    |(A─C)| < |(B─C)| ∧\n    inCentre I A B C ∧\n    I.isCentre Ω ∧\n    inCircle Ω AB BC AC ∧\n    distinctPointsOnLine X C BC ∧\n    X.onLine LX ∧\n    ¬ LX.intersectsLine AC ∧\n    tangentLine LX Ω ∧\n    distinctPointsOnLine Y B BC ∧\n    Y.onLine LY ∧\n    ¬ LY.intersectsLine AB ∧\n    tangentLine LY Ω ∧\n    circumCircle Γ A B C ∧\n    P.onLine AI ∧\n    P.onCircle Γ ∧\n    P ≠ A ∧\n    midpoint A K C ∧\n    midpoint A L B →\n  ∠ K:I:L + ∠ Y:P:X = ∟ + ∟ := by"}
{"name": "IMO_2012_P1", "uuid": "d32b4dea-a8e5-4a5e-954f-6278683d1e67", "statement_id": "01c2e3b2-be7e-46de-b474-9d69292fabde", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2012_P1 :\n  ∀ (A B C J K L M F G S T : Point)\n    (AB BC CA LM BJ KM CJ AF AG : Line)\n    (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    exCentre J A B C ∧\n    J.isCentre Ω ∧\n    tangentAtPoint M J BC Ω ∧\n    tangentAtPoint K J AB Ω ∧\n    tangentAtPoint L J AC Ω ∧\n    distinctPointsOnLine L M LM ∧\n    distinctPointsOnLine B J BJ ∧\n    F.onLine LM ∧\n    F.onLine BJ ∧\n    distinctPointsOnLine K M KM ∧\n    distinctPointsOnLine C J CJ ∧\n    G.onLine KM ∧\n    G.onLine CJ ∧\n    distinctPointsOnLine A F AF ∧\n    S.onLine AF ∧\n    S.onLine BC ∧\n    distinctPointsOnLine A G AG ∧\n    T.onLine AG ∧\n    T.onLine BC\n    → midpoint S M T := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2012_P1 :\n  ∀ (A B C J K L M F G S T : Point)\n    (AB BC CA LM BJ KM CJ AF AG : Line)\n    (Ω : Circle),\n    formTriangle A B C AB BC CA ∧\n    exCentre J A B C ∧\n    J.isCentre Ω ∧\n    tangentAtPoint M J BC Ω ∧\n    tangentAtPoint K J AB Ω ∧\n    tangentAtPoint L J AC Ω ∧\n    distinctPointsOnLine L M LM ∧\n    distinctPointsOnLine B J BJ ∧\n    F.onLine LM ∧\n    F.onLine BJ ∧\n    distinctPointsOnLine K M KM ∧\n    distinctPointsOnLine C J CJ ∧\n    G.onLine KM ∧\n    G.onLine CJ ∧\n    distinctPointsOnLine A F AF ∧\n    S.onLine AF ∧\n    S.onLine BC ∧\n    distinctPointsOnLine A G AG ∧\n    T.onLine AG ∧\n    T.onLine BC\n    → midpoint S M T := by"}
{"name": "IMO_2007_P2", "uuid": "5ea56916-c087-47c1-94fe-4308a4d42b15", "statement_id": "261db807-89ab-4228-8b4c-94e90f0ae1a7", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2007_P2 :\n  ∀ (A B C D E F G : Point) (AB BC CD DA l : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    cyclic B C E D ∧\n    A.onLine l ∧\n    between D F C ∧ F.onLine l ∧\n    G.onLine BC ∧ G.onLine l ∧\n    |(E─F)| = |(E─G)| ∧ |(E─G)| = |(E─C)| →\n    ∠ D:A:G = ∠ G:A:B := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2007_P2 :\n  ∀ (A B C D E F G : Point) (AB BC CD DA l : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    cyclic B C E D ∧\n    A.onLine l ∧\n    between D F C ∧ F.onLine l ∧\n    G.onLine BC ∧ G.onLine l ∧\n    |(E─F)| = |(E─G)| ∧ |(E─G)| = |(E─C)| →\n    ∠ D:A:G = ∠ G:A:B := by"}
{"name": "IMO_2018_P1", "uuid": "af2de34b-f0fe-4129-8897-43677ced2fb3", "statement_id": "2e9e5e3f-6f37-46df-90c5-ec075b535422", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2018_P1 :\n  ∀ (A B C D E F G : Point)\n    (AB BC CA L1 L2 DE FG : Line)\n    (Γ : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    circumCircle Γ A B C ∧\n    between A D B ∧\n    between A E C ∧\n    |(A─D)| = |(A─E)| ∧\n    perpBisector B D L1 ∧\n    F.onCircle Γ ∧\n    F.onLine L1 ∧\n    F.opposingSides C AB ∧\n    perpBisector C E L2 ∧\n    G.onCircle Γ ∧\n    G.onLine L2 ∧\n    G.opposingSides B AC ∧\n    distinctPointsOnLine D E DE ∧\n    distinctPointsOnLine F G FG →\n    ¬(DE.intersectsLine FG) ∨ (coll D E F ∧ coll D E G) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2018_P1 :\n  ∀ (A B C D E F G : Point)\n    (AB BC CA L1 L2 DE FG : Line)\n    (Γ : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    circumCircle Γ A B C ∧\n    between A D B ∧\n    between A E C ∧\n    |(A─D)| = |(A─E)| ∧\n    perpBisector B D L1 ∧\n    F.onCircle Γ ∧\n    F.onLine L1 ∧\n    F.opposingSides C AB ∧\n    perpBisector C E L2 ∧\n    G.onCircle Γ ∧\n    G.onLine L2 ∧\n    G.opposingSides B AC ∧\n    distinctPointsOnLine D E DE ∧\n    distinctPointsOnLine F G FG →\n    ¬(DE.intersectsLine FG) ∨ (coll D E F ∧ coll D E G) := by"}
{"name": "IMO_2014_P4", "uuid": "4e796b78-7114-423c-a308-43881f5c288e", "statement_id": "f8cd4aa2-3ae5-444e-8e19-66b2b8a93026", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2014_P4 :\n  ∀ (A B C P Q M N X : Point) (AB BC CA BM CN : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    between B P C ∧ between B Q C ∧\n    ∠ P:A:B = ∠ B:C:A ∧ ∠ C:A:Q = ∠ A:B:C ∧\n    midpoint A P M ∧ midpoint A Q N ∧\n    distinctPointsOnLine B M BM ∧ distinctPointsOnLine C N CN ∧\n    twoLinesIntersectAtPoint BM CN X ∧\n    circumCircle Ω A B C\n    → X.onCircle Ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2014_P4 :\n  ∀ (A B C P Q M N X : Point) (AB BC CA BM CN : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    between B P C ∧ between B Q C ∧\n    ∠ P:A:B = ∠ B:C:A ∧ ∠ C:A:Q = ∠ A:B:C ∧\n    midpoint A P M ∧ midpoint A Q N ∧\n    distinctPointsOnLine B M BM ∧ distinctPointsOnLine C N CN ∧\n    twoLinesIntersectAtPoint BM CN X ∧\n    circumCircle Ω A B C\n    → X.onCircle Ω := by"}
{"name": "IMO_2017_P4", "uuid": "4e434286-bace-4ddb-97ed-3d4c528b967b", "statement_id": "99a0d955-566b-427f-af4c-95225f861640", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2017_P4 :\n  ∀ (R S T J A B K O P : Point) (Ω Γ : Circle) (ℓ AJline KTline : Line),\n    R.onCircle Ω ∧\n    S.onCircle Ω ∧\n    R ≠ S ∧\n    tangentAtPoint R O ℓ Ω ∧\n    midpoint R S T ∧\n    J.onCircle Ω ∧\n    J ≠ R ∧\n    J ≠ S ∧\n    circumCircle Γ J S T ∧\n    A.onLine ℓ ∧\n    A.onCircle Γ ∧\n    B.onLine ℓ ∧\n    B.onCircle Γ ∧\n    A ≠ B ∧\n    |(R─A)| < |(R─B)| ∧\n    coll A J K ∧\n    K.onCircle Ω ∧\n    K ≠ J →\n  tangentAtPoint T P KTline Γ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2017_P4 :\n  ∀ (R S T J A B K O P : Point) (Ω Γ : Circle) (ℓ AJline KTline : Line),\n    R.onCircle Ω ∧\n    S.onCircle Ω ∧\n    R ≠ S ∧\n    tangentAtPoint R O ℓ Ω ∧\n    midpoint R S T ∧\n    J.onCircle Ω ∧\n    J ≠ R ∧\n    J ≠ S ∧\n    circumCircle Γ J S T ∧\n    A.onLine ℓ ∧\n    A.onCircle Γ ∧\n    B.onLine ℓ ∧\n    B.onCircle Γ ∧\n    A ≠ B ∧\n    |(R─A)| < |(R─B)| ∧\n    coll A J K ∧\n    K.onCircle Ω ∧\n    K ≠ J →\n  tangentAtPoint T P KTline Γ := by"}
{"name": "IMO_2005_P1", "uuid": "27cde578-0701-4f3e-b234-e43fe63cd1fb", "statement_id": "5fa3f2d7-b45c-4126-9027-9df42b2ea8bb", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2005_P1 :\n  ∀ (A B C A1 A2 B1 B2 C1 C2 : Point)\n    (AB BC CA A1B2 B1C2 C1A2 : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| ∧\n    distinctPointsOnLine A1 A2 BC ∧\n    distinctPointsOnLine B1 B2 CA ∧\n    distinctPointsOnLine C1 C2 AB ∧\n    distinctPointsOnLine A1 B2 A1B2 ∧\n    distinctPointsOnLine B1 C2 B1C2 ∧\n    distinctPointsOnLine C1 A2 C1A2 ∧\n    |(A1─A2)| = |(A2─B1)| ∧\n    |(A2─B1)| = |(B1─B2)| ∧\n    |(B1─B2)| = |(B2─C1)| ∧\n    |(B2─C1)| = |(C1─C2)| ∧\n    |(C1─C2)| = |(C2─A1)| →\n    concurrent A1B2 B1C2 C1A2 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2005_P1 :\n  ∀ (A B C A1 A2 B1 B2 C1 C2 : Point)\n    (AB BC CA A1B2 B1C2 C1A2 : Line),\n    formTriangle A B C AB BC CA ∧\n    |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| ∧\n    distinctPointsOnLine A1 A2 BC ∧\n    distinctPointsOnLine B1 B2 CA ∧\n    distinctPointsOnLine C1 C2 AB ∧\n    distinctPointsOnLine A1 B2 A1B2 ∧\n    distinctPointsOnLine B1 C2 B1C2 ∧\n    distinctPointsOnLine C1 A2 C1A2 ∧\n    |(A1─A2)| = |(A2─B1)| ∧\n    |(A2─B1)| = |(B1─B2)| ∧\n    |(B1─B2)| = |(B2─C1)| ∧\n    |(B2─C1)| = |(C1─C2)| ∧\n    |(C1─C2)| = |(C2─A1)| →\n    concurrent A1B2 B1C2 C1A2 := by"}
{"name": "IMO_2003_P3", "uuid": "58d481f2-ac47-439b-a138-10907daa8fc5", "statement_id": "b6512ea0-a1c7-4f40-a5b1-49eed776a09b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2003_P3 :\n  ∀ (A B C D E F M1 M2 M3 M4 M5 M6 : Point)\n    (AB BC CD DE EF FA : Line),\n    distinctPointsOnLine A B AB ∧ distinctPointsOnLine B C BC ∧ distinctPointsOnLine C D CD ∧\n    distinctPointsOnLine D E DE ∧ distinctPointsOnLine E F EF ∧ distinctPointsOnLine F A FA ∧\n    A.sameSide C DE ∧ B.sameSide D EF ∧ C.sameSide E FA ∧\n    D.sameSide F AB ∧ E.sameSide A BC ∧ F.sameSide B CD ∧\n    midpoint A M1 B ∧ midpoint D M2 E ∧ |(M1─M2)| = (√3/2) * (|(A─B)| + |(D─E)|) ∧\n    midpoint B M3 C ∧ midpoint E M4 F ∧ |(M3─M4)| = (√3/2) * (|(B─C)| + |(E─F)|) ∧\n    midpoint C M5 D ∧ midpoint F M6 A ∧ |(M5─M6)| = (√3/2) * (|(C─D)| + |(F─A)|) →\n    ∠ F:A:B = ∠ A:B:C ∧\n    ∠ A:B:C = ∠ B:C:D ∧\n    ∠ B:C:D = ∠ C:D:E ∧\n    ∠ C:D:E = ∠ D:E:F ∧\n    ∠ D:E:F = ∠ E:F:A := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2003_P3 :\n  ∀ (A B C D E F M1 M2 M3 M4 M5 M6 : Point)\n    (AB BC CD DE EF FA : Line),\n    distinctPointsOnLine A B AB ∧ distinctPointsOnLine B C BC ∧ distinctPointsOnLine C D CD ∧\n    distinctPointsOnLine D E DE ∧ distinctPointsOnLine E F EF ∧ distinctPointsOnLine F A FA ∧\n    A.sameSide C DE ∧ B.sameSide D EF ∧ C.sameSide E FA ∧\n    D.sameSide F AB ∧ E.sameSide A BC ∧ F.sameSide B CD ∧\n    midpoint A M1 B ∧ midpoint D M2 E ∧ |(M1─M2)| = (√3/2) * (|(A─B)| + |(D─E)|) ∧\n    midpoint B M3 C ∧ midpoint E M4 F ∧ |(M3─M4)| = (√3/2) * (|(B─C)| + |(E─F)|) ∧\n    midpoint C M5 D ∧ midpoint F M6 A ∧ |(M5─M6)| = (√3/2) * (|(C─D)| + |(F─A)|) →\n    ∠ F:A:B = ∠ A:B:C ∧\n    ∠ A:B:C = ∠ B:C:D ∧\n    ∠ B:C:D = ∠ C:D:E ∧\n    ∠ C:D:E = ∠ D:E:F ∧\n    ∠ D:E:F = ∠ E:F:A := by"}
{"name": "IMO_2023_P2", "uuid": "e65cd7e3-443c-4738-addd-856044e4102d", "statement_id": "df410dff-1b3d-4b9a-982e-0423b0676db8", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2023_P2 :\n  ∀ (A B C S D E L P M Oω : Point) (Ω ω : Circle)\n    (AB BC CA BS BE DL TL : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| < |(A─C)| ∧\n    circumCircle Ω A B C ∧\n    S.onCircle Ω ∧\n    |(C─S)| = |(B─S)| ∧\n    S.sameSide A BC ∧\n    foot A D BC ∧\n    distinctPointsOnLine B S BS ∧\n    D.onLine BS ∧\n    distinctPointsOnLine B E BE ∧\n    E.onCircle Ω ∧\n    coll A D E ∧\n    E ≠ A ∧\n    distinctPointsOnLine D L DL ∧\n    ¬ DL.intersectsLine BC ∧\n    L.onLine BE ∧\n    L.onLine DL ∧\n    circumCircle ω B D L ∧\n    P.onCircle Ω ∧\n    P.onCircle ω ∧\n    P ≠ B ∧\n    Oω.isCentre ω →\n    tangentAtPoint P Oω TL ω ∧\n    M.onLine TL ∧\n    M.onLine BS ∧\n    ∠ B:A:M = ∠ M:A:C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2023_P2 :\n  ∀ (A B C S D E L P M Oω : Point) (Ω ω : Circle)\n    (AB BC CA BS BE DL TL : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    |(A─B)| < |(A─C)| ∧\n    circumCircle Ω A B C ∧\n    S.onCircle Ω ∧\n    |(C─S)| = |(B─S)| ∧\n    S.sameSide A BC ∧\n    foot A D BC ∧\n    distinctPointsOnLine B S BS ∧\n    D.onLine BS ∧\n    distinctPointsOnLine B E BE ∧\n    E.onCircle Ω ∧\n    coll A D E ∧\n    E ≠ A ∧\n    distinctPointsOnLine D L DL ∧\n    ¬ DL.intersectsLine BC ∧\n    L.onLine BE ∧\n    L.onLine DL ∧\n    circumCircle ω B D L ∧\n    P.onCircle Ω ∧\n    P.onCircle ω ∧\n    P ≠ B ∧\n    Oω.isCentre ω →\n    tangentAtPoint P Oω TL ω ∧\n    M.onLine TL ∧\n    M.onLine BS ∧\n    ∠ B:A:M = ∠ M:A:C := by"}
{"name": "IMO_2004_P5", "uuid": "b4f3bcef-6d68-40fa-880b-491a37b3edd7", "statement_id": "6d7134a1-935a-4322-aaf1-815700621989", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2004_P5 :\n  ∀ (A B C D P : Point) (AB BC CD DA BD : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ¬ (∠ A:B:D = ∠ D:B:C) ∧\n    ¬ (∠ C:D:B = ∠ B:D:A) ∧\n    insideQuadrilateral P A B C D AB BC CD DA ∧\n    ∠ P:B:C = ∠ D:B:A ∧\n    ∠ P:D:C = ∠ B:D:A →\n    (cyclic A B C D ↔ |(A─P)| = |(C─P)|) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2004_P5 :\n  ∀ (A B C D P : Point) (AB BC CD DA BD : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ¬ (∠ A:B:D = ∠ D:B:C) ∧\n    ¬ (∠ C:D:B = ∠ B:D:A) ∧\n    insideQuadrilateral P A B C D AB BC CD DA ∧\n    ∠ P:B:C = ∠ D:B:A ∧\n    ∠ P:D:C = ∠ B:D:A →\n    (cyclic A B C D ↔ |(A─P)| = |(C─P)|) := by"}
{"name": "IMO_2021_P3", "uuid": "02ed9084-48b4-4f44-b250-42ee4301021a", "statement_id": "cdda94a8-a367-4bb2-ad0a-6f01ef613457", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2021_P3 :\n  ∀ (A B C D E F X O1 O2 : Point) (AB BC CA EF L12 : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    insideTriangle D A B C AB BC CA ∧\n    |(A─B)| > |(A─C)| ∧\n    ∠ D:A:B = ∠ C:A:D ∧\n    between A E C ∧\n    ∠ A:D:E = ∠ B:C:D ∧\n    between A F B ∧\n    ∠ F:D:A = ∠ D:B:C ∧\n    X.onLine CA ∧\n    |(C─X)| = |(B─X)| ∧\n    circumCentre O1 A D C ∧\n    circumCentre O2 E X D ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine O1 O2 L12 →\n    concurrent BC EF L12 := by sorry\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2021_P3 :\n  ∀ (A B C D E F X O1 O2 : Point) (AB BC CA EF L12 : Line),\n    formAcuteTriangle A B C AB BC CA ∧\n    insideTriangle D A B C AB BC CA ∧\n    |(A─B)| > |(A─C)| ∧\n    ∠ D:A:B = ∠ C:A:D ∧\n    between A E C ∧\n    ∠ A:D:E = ∠ B:C:D ∧\n    between A F B ∧\n    ∠ F:D:A = ∠ D:B:C ∧\n    X.onLine CA ∧\n    |(C─X)| = |(B─X)| ∧\n    circumCentre O1 A D C ∧\n    circumCentre O2 E X D ∧\n    distinctPointsOnLine E F EF ∧\n    distinctPointsOnLine O1 O2 L12 →\n    concurrent BC EF L12 := by sorry"}
{"name": "IMO_2000_P6", "uuid": "ead52a8c-6127-4666-9ec4-1ad23be8fc57", "statement_id": "a5d0b0af-e939-427b-8ba4-ad25590d7e62", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2000_P6 :\n  ∀ (A B C H1 H2 H3 T1 T2 T3 X Y Z : Point)\n    (AB BC CA T12 T23 T31 L12 L23 L31 : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A H1 BC ∧\n    foot B H2 CA ∧\n    foot C H3 AB ∧\n    T1.onLine BC ∧ T1.onCircle Ω ∧\n    T2.onLine CA ∧ T2.onCircle Ω ∧\n    T3.onLine AB ∧ T3.onCircle Ω ∧\n    distinctPointsOnLine T1 T2 T12 ∧\n    distinctPointsOnLine T2 T3 T23 ∧\n    distinctPointsOnLine T3 T1 T31 ∧\n    symmetricLine H1H2 T12 L12 ∧\n    symmetricLine H2H3 T23 L23 ∧\n    symmetricLine H3H1 T31 L31 →\n    twoLinesIntersectAtPoint L12 L23 X ∧ X.onCircle Ω ∧\n    twoLinesIntersectAtPoint L23 L31 Y ∧ Y.onCircle Ω ∧\n    twoLinesIntersectAtPoint L31 L12 Z ∧ Z.onCircle Ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2000_P6 :\n  ∀ (A B C H1 H2 H3 T1 T2 T3 X Y Z : Point)\n    (AB BC CA T12 T23 T31 L12 L23 L31 : Line) (Ω : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    foot A H1 BC ∧\n    foot B H2 CA ∧\n    foot C H3 AB ∧\n    T1.onLine BC ∧ T1.onCircle Ω ∧\n    T2.onLine CA ∧ T2.onCircle Ω ∧\n    T3.onLine AB ∧ T3.onCircle Ω ∧\n    distinctPointsOnLine T1 T2 T12 ∧\n    distinctPointsOnLine T2 T3 T23 ∧\n    distinctPointsOnLine T3 T1 T31 ∧\n    symmetricLine H1H2 T12 L12 ∧\n    symmetricLine H2H3 T23 L23 ∧\n    symmetricLine H3H1 T31 L31 →\n    twoLinesIntersectAtPoint L12 L23 X ∧ X.onCircle Ω ∧\n    twoLinesIntersectAtPoint L23 L31 Y ∧ Y.onCircle Ω ∧\n    twoLinesIntersectAtPoint L31 L12 Z ∧ Z.onCircle Ω := by"}
{"name": "IMO_2013_P4", "uuid": "fb2580b2-3a76-4232-ad9a-7244d83b07f6", "statement_id": "9fff74f2-5055-4f6c-b01e-9d2f79981103", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2013_P4 :\n  ∀ (A B C H W M N X Y O1 O2 : Point) (AB BC CA : Line) (ω1 ω2 : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    between B W C ∧\n    foot B M CA ∧\n    foot C N AB ∧\n    coll B H M ∧\n    coll C H N ∧\n    circumCircle ω1 B W N ∧\n    diameter W X O1 ω1 ∧\n    circumCircle ω2 C W M ∧\n    diameter W Y O2 ω2 →\n    coll X H Y := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2013_P4 :\n  ∀ (A B C H W M N X Y O1 O2 : Point) (AB BC CA : Line) (ω1 ω2 : Circle),\n    formAcuteTriangle A B C AB BC CA ∧\n    between B W C ∧\n    foot B M CA ∧\n    foot C N AB ∧\n    coll B H M ∧\n    coll C H N ∧\n    circumCircle ω1 B W N ∧\n    diameter W X O1 ω1 ∧\n    circumCircle ω2 C W M ∧\n    diameter W Y O2 ω2 →\n    coll X H Y := by"}
{"name": "IMO_2000_P1", "uuid": "c3590a5c-7582-48fb-9278-6a24cc08d52d", "statement_id": "981fd51e-705e-4d13-8f7c-a78414033430", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2000_P1 :\n  ∀ (M N A B C D E P Q O1 O2 : Point) (G1 G2 : Circle) (AB CD AC BD AN BN : Line),\n    circlesIntersectsAtTwoPoints G1 G2 M N ∧\n    distinctPointsOnLine A B AB ∧\n    tangentAtPoint A O1 AB G1 ∧\n    tangentAtPoint B O2 AB G2 ∧\n    ¬ AB.intersectsLine CD ∧\n    distinctPointsOnLine M C CD ∧\n    C.onCircle G1 ∧ C ≠ M ∧\n    D.onCircle G2 ∧ D.onLine CD ∧ D ≠ M ∧\n    distinctPointsOnLine A C AC ∧\n    distinctPointsOnLine B D BD ∧\n    twoLinesIntersectAtPoint AC BD E ∧\n    distinctPointsOnLine A N AN ∧\n    twoLinesIntersectAtPoint AN CD P ∧\n    distinctPointsOnLine B N BN ∧\n    twoLinesIntersectAtPoint BN CD Q →\n    |(E─P)| = |(E─Q)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2000_P1 :\n  ∀ (M N A B C D E P Q O1 O2 : Point) (G1 G2 : Circle) (AB CD AC BD AN BN : Line),\n    circlesIntersectsAtTwoPoints G1 G2 M N ∧\n    distinctPointsOnLine A B AB ∧\n    tangentAtPoint A O1 AB G1 ∧\n    tangentAtPoint B O2 AB G2 ∧\n    ¬ AB.intersectsLine CD ∧\n    distinctPointsOnLine M C CD ∧\n    C.onCircle G1 ∧ C ≠ M ∧\n    D.onCircle G2 ∧ D.onLine CD ∧ D ≠ M ∧\n    distinctPointsOnLine A C AC ∧\n    distinctPointsOnLine B D BD ∧\n    twoLinesIntersectAtPoint AC BD E ∧\n    distinctPointsOnLine A N AN ∧\n    twoLinesIntersectAtPoint AN CD P ∧\n    distinctPointsOnLine B N BN ∧\n    twoLinesIntersectAtPoint BN CD Q →\n    |(E─P)| = |(E─Q)| := by"}
{"name": "IMO_2010_P4", "uuid": "ed486223-fed1-4829-9f29-c7a593c9e779", "statement_id": "80afadd6-6dea-417a-96be-19c37bb97583", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2010_P4 :\n  ∀ (A B C P K L M S O : Point) (t : Line) (Γ : Circle) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    |(C─A)| ≠ |(C─B)| ∧\n    insideTriangle P A B C AB BC CA ∧\n    O.isCentre Γ ∧\n    circumCircle Γ A B C ∧\n    between A P K ∧\n    between B P L ∧\n    between C P M ∧\n    K.onCircle Γ ∧\n    L.onCircle Γ ∧\n    M.onCircle Γ ∧\n    tangentAtPoint C O t Γ ∧\n    S.onLine AB ∧\n    S.onLine t ∧\n    |(S─C)| = |(S─P)| →\n    |(M─K)| = |(M─L)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2010_P4 :\n  ∀ (A B C P K L M S O : Point) (t : Line) (Γ : Circle) (AB BC CA : Line),\n    formTriangle A B C AB BC CA ∧\n    |(C─A)| ≠ |(C─B)| ∧\n    insideTriangle P A B C AB BC CA ∧\n    O.isCentre Γ ∧\n    circumCircle Γ A B C ∧\n    between A P K ∧\n    between B P L ∧\n    between C P M ∧\n    K.onCircle Γ ∧\n    L.onCircle Γ ∧\n    M.onCircle Γ ∧\n    tangentAtPoint C O t Γ ∧\n    S.onLine AB ∧\n    S.onLine t ∧\n    |(S─C)| = |(S─P)| →\n    |(M─K)| = |(M─L)| := by"}
{"name": "IMO_2009_P4", "uuid": "ae70a92e-b96c-462c-845c-27c0e4c9901f", "statement_id": "f27523d4-6068-4e91-95e0-d64af76c1ee0", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2009_P4 :\n  ∀ (A B C D E K : Point) (AB BC CA AD DC : Line),\n    formTriangle A B C AB BC CA ∧ |(A─B)| = |(A─C)| ∧\n    between B D C ∧ ∠ C:A:D = ∠ D:A:B ∧\n    between C E A ∧ ∠ A:B:E = ∠ E:B:C ∧\n    formTriangle A D C AD DC CA ∧ inCentre K A D C ∧\n    ∠ B:E:K = ∟/2 →\n    (∠ C:A:B = ∟) ∨ (∠ C:A:B = 2/3 * ∟) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2009_P4 :\n  ∀ (A B C D E K : Point) (AB BC CA AD DC : Line),\n    formTriangle A B C AB BC CA ∧ |(A─B)| = |(A─C)| ∧\n    between B D C ∧ ∠ C:A:D = ∠ D:A:B ∧\n    between C E A ∧ ∠ A:B:E = ∠ E:B:C ∧\n    formTriangle A D C AD DC CA ∧ inCentre K A D C ∧\n    ∠ B:E:K = ∟/2 →\n    (∠ C:A:B = ∟) ∨ (∠ C:A:B = 2/3 * ∟) := by"}
{"name": "IMO_2001_P5", "uuid": "366ff73f-ce30-4995-933d-d2173fb86488", "statement_id": "1117b34f-252f-4372-9314-8862115f0e58", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2001_P5 :\n  ∀ (A B C P Q : Point) (AB BC CA AP BQ : Line),\n    formTriangle A B C AB BC CA ∧\n    ∠ B:A:C = 2/3 * ∟ ∧\n    distinctPointsOnLine A P AP ∧ P.onLine BC ∧ ∠ B:A:P = ∠ P:A:C ∧\n    distinctPointsOnLine B Q BQ ∧ Q.onLine CA ∧ ∠ A:B:Q = ∠ Q:B:C ∧\n    |(A─B)| + |(B─P)| = |(A─Q)| + |(Q─B)| →\n    ∠ A:B:C = 8/9 * ∟ ∧ ∠ B:C:A = 4/9 * ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2001_P5 :\n  ∀ (A B C P Q : Point) (AB BC CA AP BQ : Line),\n    formTriangle A B C AB BC CA ∧\n    ∠ B:A:C = 2/3 * ∟ ∧\n    distinctPointsOnLine A P AP ∧ P.onLine BC ∧ ∠ B:A:P = ∠ P:A:C ∧\n    distinctPointsOnLine B Q BQ ∧ Q.onLine CA ∧ ∠ A:B:Q = ∠ Q:B:C ∧\n    |(A─B)| + |(B─P)| = |(A─Q)| + |(Q─B)| →\n    ∠ A:B:C = 8/9 * ∟ ∧ ∠ B:C:A = 4/9 * ∟ := by"}
{"name": "IMO_2014_P3", "uuid": "602d555a-e8af-4c50-9d8c-7e835286f502", "statement_id": "6d0b50fb-a9d5-4a03-8fb6-8e4ad9d45f2d", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2014_P3 :\n  ∀ (A B C D H S T O: Point)\n    (AB BC CD DA BD SC CT ST: Line)\n    (Ω: Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ∠ A:B:C = ∟ ∧\n    ∠ C:D:A = ∟ ∧\n    foot A H BD ∧\n    between A S B ∧\n    between A T D ∧\n    distinctPointsOnLine S C SC ∧\n    distinctPointsOnLine C T CT ∧\n    distinctPointsOnLine T S ST ∧\n    insideTriangle H S C T SC CT ST ∧\n    ∠ C:H:S = ∠ C:S:B + ∟ ∧\n    ∠ T:H:C = ∠ D:T:C + ∟ →\n    circumCircle Ω T S H ∧ circumCentre O T S H ∧ tangentAtPoint H O BD Ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem IMO_2014_P3 :\n  ∀ (A B C D H S T O: Point)\n    (AB BC CD DA BD SC CT ST: Line)\n    (Ω: Circle),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ∠ A:B:C = ∟ ∧\n    ∠ C:D:A = ∟ ∧\n    foot A H BD ∧\n    between A S B ∧\n    between A T D ∧\n    distinctPointsOnLine S C SC ∧\n    distinctPointsOnLine C T CT ∧\n    distinctPointsOnLine T S ST ∧\n    insideTriangle H S C T SC CT ST ∧\n    ∠ C:H:S = ∠ C:S:B + ∟ ∧\n    ∠ T:H:C = ∠ D:T:C + ∟ →\n    circumCircle Ω T S H ∧ circumCentre O T S H ∧ tangentAtPoint H O BD Ω := by"}
{"name": "library7", "uuid": "d1bc2c01-357d-4c9d-90df-c5993f3aa313", "statement_id": "e5f41e27-ec1b-41a6-96d6-a898bb76a070", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library7 : ∀ (a b c d e : Point), triangle a b c ∧ midpoint a d b ∧ midpoint a e c → |(b─c)| = |(d─e)| * 2:= by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library7 : ∀ (a b c d e : Point), triangle a b c ∧ midpoint a d b ∧ midpoint a e c → |(b─c)| = |(d─e)| * 2:= by"}
{"name": "library3", "uuid": "399b19fa-a979-4ddd-ace1-57feba388119", "statement_id": "79a87d4e-b1da-4c92-a2a3-68c4a7b91bfe", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library3:\n  ∀ (A B C D : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ∠A:B:C = ∠C:D:A ∧\n    ∠B:C:D = ∠D:A:B →\n    parallelogram A B C D AB BC CD DA := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library3:\n  ∀ (A B C D : Point) (AB BC CD DA : Line),\n    formQuadrilateral A B C D AB BC CD DA ∧\n    ∠A:B:C = ∠C:D:A ∧\n    ∠B:C:D = ∠D:A:B →\n    parallelogram A B C D AB BC CD DA := by"}
{"name": "library1", "uuid": "e4bb9908-3805-4886-94cf-716b11d65310", "statement_id": "8733be97-0d64-45a4-932a-f01bdea992c1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library1 : ∀ (a b c d o: Point) (O : Circle), a.onCircle O ∧ b.onCircle O ∧ c.onCircle O ∧ d.onCircle O ∧  o.isCentre O ∧ |(a─b)| = |(c─d)| → ∠a:o:b =∠ c:o:d := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library1 : ∀ (a b c d o: Point) (O : Circle), a.onCircle O ∧ b.onCircle O ∧ c.onCircle O ∧ d.onCircle O ∧  o.isCentre O ∧ |(a─b)| = |(c─d)| → ∠a:o:b =∠ c:o:d := by"}
{"name": "library5", "uuid": "dcd702a6-25c9-464a-91ba-9b31e06bef7b", "statement_id": "42668ddb-c80e-4d48-b8bc-f34c38feaef6", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library5 :\n  ∀ (A B C O : Point) (AB BC CA: Line) (Ω : Circle), (formTriangle A B C AB BC CA) ∧ (insideTriangle O A B C AB BC CA) ∧ (A.onCircle Ω) ∧ (B.onCircle Ω) ∧ (C.onCircle Ω) ∧ (O.isCentre Ω)\n    → ∠ A:O:B = ∠ A:C:B + ∠ A:C:B := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library5 :\n  ∀ (A B C O : Point) (AB BC CA: Line) (Ω : Circle), (formTriangle A B C AB BC CA) ∧ (insideTriangle O A B C AB BC CA) ∧ (A.onCircle Ω) ∧ (B.onCircle Ω) ∧ (C.onCircle Ω) ∧ (O.isCentre Ω)\n    → ∠ A:O:B = ∠ A:C:B + ∠ A:C:B := by"}
{"name": "library10", "uuid": "bf8ccef2-37a0-4c8a-89cf-32682ae7ab68", "statement_id": "515d85d2-e336-469c-a84c-0de9470758dc", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library10 : ∀ (A B C D: Point), triangle A B C ∧ ∠D:A:B = ∠D:A:C ∧ coll B D C → |(A─C)| * |(B─D)| = |(A─B)| * |(C─D)|:= by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library10 : ∀ (A B C D: Point), triangle A B C ∧ ∠D:A:B = ∠D:A:C ∧ coll B D C → |(A─C)| * |(B─D)| = |(A─B)| * |(C─D)|:= by"}
{"name": "library4", "uuid": "cfcbddf5-3e64-4cc1-ad57-a2d33864ee6d", "statement_id": "3514e3df-8fa0-405d-b00d-d9ebc7539470", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library4: ∀ (A B C D E : Point) (Ω: Circle),\n  A.onCircle Ω ∧ B.onCircle Ω ∧ C.onCircle Ω ∧ D.onCircle Ω ∧\n  distinctFourPoints A B C D ∧\n  between A E B ∧ between C E D → |(A─E)| * |(E─B)| = |(C─E)| * |(E─D)|:= by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library4: ∀ (A B C D E : Point) (Ω: Circle),\n  A.onCircle Ω ∧ B.onCircle Ω ∧ C.onCircle Ω ∧ D.onCircle Ω ∧\n  distinctFourPoints A B C D ∧\n  between A E B ∧ between C E D → |(A─E)| * |(E─B)| = |(C─E)| * |(E─D)|:= by"}
{"name": "library2", "uuid": "feecada3-a865-4fd3-9458-42fed95a9d57", "statement_id": "737bb562-6bee-412f-9822-5439c4323109", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library2 : ∀ (A B C D: Point) (AB:Line) (Ω : Circle), distinctPointsOnLine A B AB ∧ A.onCircle Ω ∧ B.onCircle Ω ∧  C.onCircle Ω ∧ ∠B:C:A + ∠B:D:A = ∟ + ∟ ∧ C.opposingSides D AB → D.onCircle Ω:= by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library2 : ∀ (A B C D: Point) (AB:Line) (Ω : Circle), distinctPointsOnLine A B AB ∧ A.onCircle Ω ∧ B.onCircle Ω ∧  C.onCircle Ω ∧ ∠B:C:A + ∠B:D:A = ∟ + ∟ ∧ C.opposingSides D AB → D.onCircle Ω:= by"}
{"name": "library8", "uuid": "21757be6-d266-4859-b48d-ee7daeaa5df6", "statement_id": "b7915ec1-7f71-4527-b013-2974ecd1e006", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library8 : ∀(A B C : Point), rightTriangle A B C → |(B─C)| > |(A─B)| ∧  |(B─C)| > |(A─C)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem library8 : ∀(A B C : Point), rightTriangle A B C → |(B─C)| > |(A─B)| ∧  |(B─C)| > |(A─C)| := by"}
{"name": "librar9", "uuid": "212dccbd-1f4e-4c76-b318-f3e4e601bf39", "statement_id": "201cb507-2106-47ba-9537-1b66463e3040", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem librar9 :\n∀ (L M T : Line) (A B C D : Point),\n  twoLinesIntersectAtPoint L T A ∧\n  twoLinesIntersectAtPoint M T B ∧\n  C.onLine L ∧\n  D.onLine M ∧\n  C.sameSide D T ∧ A ≠ B\n  ∧ ∠ C:A:B + ∠ A:B:D = ∟ + ∟ → (¬ L.intersectsLine M) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem librar9 :\n∀ (L M T : Line) (A B C D : Point),\n  twoLinesIntersectAtPoint L T A ∧\n  twoLinesIntersectAtPoint M T B ∧\n  C.onLine L ∧\n  D.onLine M ∧\n  C.sameSide D T ∧ A ≠ B\n  ∧ ∠ C:A:B + ∠ A:B:D = ∟ + ∟ → (¬ L.intersectsLine M) := by"}
{"name": "generate_theorem_1", "uuid": "6755da44-ebd0-4968-9e1f-cb4c85e7e1d1", "statement_id": "7d91cc53-2f9a-4943-87a8-9d356daa367d", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem generate_theorem_1:\n  ∀ (O A B C D M N : Point) (Ω : Circle) (L_AB L_CD : Line),\n    O.isCentre Ω ∧\n    A.onCircle Ω ∧ B.onCircle Ω ∧ C.onCircle Ω ∧ D.onCircle Ω ∧\n    distinctPointsOnLine A B L_AB ∧\n    distinctPointsOnLine C D L_CD ∧\n    |(A─B)| = |(C─D)| ∧\n    foot O M L_AB ∧\n    foot O N L_CD\n    → |(O─M)| = |(O─N)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem generate_theorem_1:\n  ∀ (O A B C D M N : Point) (Ω : Circle) (L_AB L_CD : Line),\n    O.isCentre Ω ∧\n    A.onCircle Ω ∧ B.onCircle Ω ∧ C.onCircle Ω ∧ D.onCircle Ω ∧\n    distinctPointsOnLine A B L_AB ∧\n    distinctPointsOnLine C D L_CD ∧\n    |(A─B)| = |(C─D)| ∧\n    foot O M L_AB ∧\n    foot O N L_CD\n    → |(O─M)| = |(O─N)| := by"}
{"name": "cyclic_collinearity_from_exterior_angle", "uuid": "27ad4d89-de12-4bf4-91f1-7e694c5df8b1", "statement_id": "4cd05f72-26a7-4fdd-9cb6-e3b29d6bea4f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem cyclic_collinearity_from_exterior_angle :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line) (Ω : Circle),\n    cyclicQuadrilateral A B C D AB BC CD DA Ω ∧\n    between A B E ∧\n    A.sameSide F CD ∧\n    ∠ E:B:C = ∠ F:D:C\n  → coll A D F := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem cyclic_collinearity_from_exterior_angle :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line) (Ω : Circle),\n    cyclicQuadrilateral A B C D AB BC CD DA Ω ∧\n    between A B E ∧\n    A.sameSide F CD ∧\n    ∠ E:B:C = ∠ F:D:C\n  → coll A D F := by"}
{"name": "parallelogram_angle_bisector_creates_isoceles", "uuid": "67cc144b-1f72-4712-b880-80fa5498c742", "statement_id": "6d2b857b-8900-45ca-9a52-875db32ab362", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem parallelogram_angle_bisector_creates_isoceles:\n  ∀ (A B C D E : Point) (AB BC CD DA AE : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    distinctPointsOnLine A E AE ∧\n    E.onLine CD ∧ between C E D ∧\n    ∠D:A:E = ∠E:A:B\n    → |(D─E)| = |(A─D)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem parallelogram_angle_bisector_creates_isoceles:\n  ∀ (A B C D E : Point) (AB BC CD DA AE : Line),\n    parallelogram A B C D AB BC CD DA ∧\n    distinctPointsOnLine A E AE ∧\n    E.onLine CD ∧ between C E D ∧\n    ∠D:A:E = ∠E:A:B\n    → |(D─E)| = |(A─D)| := by"}
{"name": "angle_altitude_circumradius_equal", "uuid": "f6c830b0-2bda-40df-8bc8-b0fdbace38c4", "statement_id": "578a8dbc-eafc-44aa-a4b0-ba24cb6f75e5", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem angle_altitude_circumradius_equal:\n  ∀ (A B C O H : Point) (Ω : Circle) (BC AB AC: Line),\n    acuteTriangle A B C ∧\n    formTriangle A B C AB BC AC ∧\n    circumCircle Ω A B C ∧\n    O.isCentre Ω ∧\n    -- This condition holds for acute triangles, but we state it to use the given theorem easily\n    O.sameSide C AB ∧\n    foot A H BC\n    → ∠ O:A:B = ∠ H:A:C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem angle_altitude_circumradius_equal:\n  ∀ (A B C O H : Point) (Ω : Circle) (BC AB AC: Line),\n    acuteTriangle A B C ∧\n    formTriangle A B C AB BC AC ∧\n    circumCircle Ω A B C ∧\n    O.isCentre Ω ∧\n    -- This condition holds for acute triangles, but we state it to use the given theorem easily\n    O.sameSide C AB ∧\n    foot A H BC\n    → ∠ O:A:B = ∠ H:A:C := by"}
{"name": "exercise_angle_bisector_lengths", "uuid": "6d7535ac-f14b-47fe-817d-dee33a941940", "statement_id": "704fe18d-b722-43a6-b654-16a2c02c962f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem exercise_angle_bisector_lengths :\n  ∀ (A B C D: Point),\n    triangle A B C ∧\n    ∠B:A:D = ∠C:A:D ∧\n    coll B D C ∧\n    between B D C ∧\n    |(A─C)| * 2 = |(A─B)| * 3\n    → |(B─C)| * 2 = |(B─D)| * 5 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem exercise_angle_bisector_lengths :\n  ∀ (A B C D: Point),\n    triangle A B C ∧\n    ∠B:A:D = ∠C:A:D ∧\n    coll B D C ∧\n    between B D C ∧\n    |(A─C)| * 2 = |(A─B)| * 3\n    → |(B─C)| * 2 = |(B─D)| * 5 := by"}
{"name": "tangent_parallel_to_chord_collinear", "uuid": "ac593d87-eee7-4d4d-8d77-b81186c887e8", "statement_id": "17e7c8e1-b261-4eae-8936-74e332cfa328", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem tangent_parallel_to_chord_collinear:\n  ∀ (Ω : Circle) (L_AB L_T : Line) (O A B M T: Point),\n    O.isCentre Ω ∧\n    A.onCircle Ω ∧ B.onCircle Ω ∧ T.onCircle Ω ∧\n    A ≠ B ∧\n    midpoint A M B ∧\n    distinctPointsOnLine A B L_AB ∧\n    tangentAtPoint T O L_T Ω ∧\n    (¬ L_AB.intersectsLine L_T)\n    → coll O M T := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem tangent_parallel_to_chord_collinear:\n  ∀ (Ω : Circle) (L_AB L_T : Line) (O A B M T: Point),\n    O.isCentre Ω ∧\n    A.onCircle Ω ∧ B.onCircle Ω ∧ T.onCircle Ω ∧\n    A ≠ B ∧\n    midpoint A M B ∧\n    distinctPointsOnLine A B L_AB ∧\n    tangentAtPoint T O L_T Ω ∧\n    (¬ L_AB.intersectsLine L_T)\n    → coll O M T := by"}
{"name": "parallelogram_transversal_property", "uuid": "c4ffeeb7-1214-427b-8641-3920fb431a63", "statement_id": "5e483811-d8c8-4702-b3d9-3cdaae4d8231", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem parallelogram_transversal_property:\n  ∀ (A B C D E F : Point) (AB AD BC CD CEFD : Line),\n    parallelogram A B C D AB AD BC CD ∧\n    threePointsOnLine C E F CEFD ∧\n    E.onLine AB ∧ F.onLine AD ∧ A ≠ E ∧ A ≠ F ∧\n    between A B E ∧ between A D F\n    → |(A─B)| * |(A─F)| + |(A─D)| * |(A─E)| = |(A─E)| * |(A─F)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem parallelogram_transversal_property:\n  ∀ (A B C D E F : Point) (AB AD BC CD CEFD : Line),\n    parallelogram A B C D AB AD BC CD ∧\n    threePointsOnLine C E F CEFD ∧\n    E.onLine AB ∧ F.onLine AD ∧ A ≠ E ∧ A ≠ F ∧\n    between A B E ∧ between A D F\n    → |(A─B)| * |(A─F)| + |(A─D)| * |(A─E)| = |(A─E)| * |(A─F)| := by"}
{"name": "power_of_midpoint_on_median", "uuid": "f2dbccb0-911f-482a-8469-43e5155a4494", "statement_id": "fc93d32b-dfe5-4740-a783-c92ceb5950c9", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem power_of_midpoint_on_median:\n  ∀ (A B C M D O : Point) (Ω : Circle),\n    (triangle A B C) ∧\n    (midpoint B M C) ∧\n    (circumCircle Ω A B C) ∧\n    (O.isCentre Ω) ∧\n    (D.onCircle Ω) ∧\n    (D ≠ A) ∧\n    (between A M D)\n    → |(A─M)| * |(M─D)| = |(B─M)| * |(B─M)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem power_of_midpoint_on_median:\n  ∀ (A B C M D O : Point) (Ω : Circle),\n    (triangle A B C) ∧\n    (midpoint B M C) ∧\n    (circumCircle Ω A B C) ∧\n    (O.isCentre Ω) ∧\n    (D.onCircle Ω) ∧\n    (D ≠ A) ∧\n    (between A M D)\n    → |(A─M)| * |(M─D)| = |(B─M)| * |(B─M)| := by"}
{"name": "orthocenter_power_property", "uuid": "711a19a1-fd2c-41d3-9afd-300788f0850a", "statement_id": "351b22ee-1d54-436c-9730-51f646c89d7d", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem orthocenter_power_property:\n  ∀ (A B C D E F H : Point) (AB BC CA : Line),\n    acuteTriangle A B C ∧\n    orthoCentre H A B C D E F AB BC CA\n    → |(A─H)| * |(H─D)| = |(B─H)| * |(H─E)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem orthocenter_power_property:\n  ∀ (A B C D E F H : Point) (AB BC CA : Line),\n    acuteTriangle A B C ∧\n    orthoCentre H A B C D E F AB BC CA\n    → |(A─H)| * |(H─D)| = |(B─H)| * |(H─E)| := by"}
{"name": "iso_triangle_median_property", "uuid": "fbdb0306-6d98-4763-9ace-5d00ef3f8983", "statement_id": "99194639-dcaf-4609-a813-bf429e625196", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem iso_triangle_median_property:\n  ∀ (A B C M P : Point),\n    isoTriangle A B C ∧ midpoint B M C ∧ coll A M P\n    → |(P─B)| = |(P─C)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem iso_triangle_median_property:\n  ∀ (A B C M P : Point),\n    isoTriangle A B C ∧ midpoint B M C ∧ coll A M P\n    → |(P─B)| = |(P─C)| := by"}
{"name": "right_triangles_share_hypotenuse_iso_angles", "uuid": "70f86297-ae29-4ea3-a2d5-79152c9d4882", "statement_id": "7087901f-147e-43ca-8c7b-f59471e86eb4", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangles_share_hypotenuse_iso_angles:\n  ∀ (A B C D M : Point),\n    rightTriangle B A C ∧\n    rightTriangle D A C ∧\n    midpoint A M C ∧\n    triangle M B D\n    → ∠ M:B:D = ∠ M:D:B := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangles_share_hypotenuse_iso_angles:\n  ∀ (A B C D M : Point),\n    rightTriangle B A C ∧\n    rightTriangle D A C ∧\n    midpoint A M C ∧\n    triangle M B D\n    → ∠ M:B:D = ∠ M:D:B := by"}
{"name": "incenter_of_isosceles_triangle_is_isosceles", "uuid": "63a71f77-80d9-471c-9d88-8c05ab260773", "statement_id": "67cead66-cba1-4334-9c4f-56becae5073a", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem incenter_of_isosceles_triangle_is_isosceles :\n  ∀ (A B C I : Point),\n    isoTriangle A B C ∧\n    inCentre I A B C\n    → isoTriangle I B C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem incenter_of_isosceles_triangle_is_isosceles :\n  ∀ (A B C I : Point),\n    isoTriangle A B C ∧\n    inCentre I A B C\n    → isoTriangle I B C := by"}
{"name": "Numina_Geometry_1110", "uuid": "46d4390f-5434-48cf-b6e8-bfe8c99b9e89", "statement_id": "11114644-70ac-45b8-a76e-f6f0788f4394", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1110 :\n  ∀ (A B C H M K : Point) (AC: Line),\n    (triangle A B C) ∧\n    (between A H C) ∧\n    (foot B H AC) ∧\n    (distinctPointsOnLine A C AC) ∧\n    (midpoint B M C) ∧\n    (midpoint A K B)\n    →\n    (∠ K:H:M = ∠ A:B:C) ∧\n    (∠ K:M:H = ∠ A:C:B) ∧\n    (∠ H:K:M = ∠ B:A:C) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1110 :\n  ∀ (A B C H M K : Point) (AC: Line),\n    (triangle A B C) ∧\n    (between A H C) ∧\n    (foot B H AC) ∧\n    (distinctPointsOnLine A C AC) ∧\n    (midpoint B M C) ∧\n    (midpoint A K B)\n    →\n    (∠ K:H:M = ∠ A:B:C) ∧\n    (∠ K:M:H = ∠ A:C:B) ∧\n    (∠ H:K:M = ∠ B:A:C) := by"}
{"name": "right_triangle_altitude_theorem", "uuid": "267debfc-b501-4772-a56c-ef6aa31e7c20", "statement_id": "8ee203f2-05bb-4ae1-87b1-1c127617d5ff", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangle_altitude_theorem:\n  ∀ (A B C D: Point) (BC : Line),\n    rightTriangle A B C ∧\n    distinctPointsOnLine B C BC ∧\n    foot A D BC\n    → |(A─D)| * |(A─D)| = |(B─D)| * |(D─C)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangle_altitude_theorem:\n  ∀ (A B C D: Point) (BC : Line),\n    rightTriangle A B C ∧\n    distinctPointsOnLine B C BC ∧\n    foot A D BC\n    → |(A─D)| * |(A─D)| = |(B─D)| * |(D─C)| := by"}
{"name": "Numina_Geometry_599", "uuid": "1e79fcc4-4000-44cd-9a45-fe325a7eb5dc", "statement_id": "6b3fdafe-c0c3-4fc6-9709-fcc5e3f04b4a", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_599 :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line),\n    rectangle A B C D AB BC CD DA ∧\n    midpoint B E C ∧\n    midpoint C F D →\n    |(A─E)| < |(E─F)| + |(E─F)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_599 :\n  ∀ (A B C D E F : Point) (AB BC CD DA : Line),\n    rectangle A B C D AB BC CD DA ∧\n    midpoint B E C ∧\n    midpoint C F D →\n    |(A─E)| < |(E─F)| + |(E─F)| := by"}
{"name": "right_triangle_median_perpendicular_midpoint", "uuid": "184df3fb-3f7b-4d41-9626-f55b335a55f0", "statement_id": "c73e5a9b-4127-48fa-9388-1e0c7b472af1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangle_median_perpendicular_midpoint:\n  ∀ (A B C M D : Point) (AB BC : Line),\n    rightTriangle A B C ∧\n    distinctPointsOnLine A B AB ∧\n    distinctPointsOnLine B C BC ∧\n    midpoint B M C ∧\n    foot M D AB\n    → midpoint A D B := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem right_triangle_median_perpendicular_midpoint:\n  ∀ (A B C M D : Point) (AB BC : Line),\n    rightTriangle A B C ∧\n    distinctPointsOnLine A B AB ∧\n    distinctPointsOnLine B C BC ∧\n    midpoint B M C ∧\n    foot M D AB\n    → midpoint A D B := by"}
{"name": "Apollonius_Theorem", "uuid": "39272e7c-dbb9-401e-bf73-b96402234f26", "statement_id": "4d11de53-7186-492c-b681-5c0294838ec9", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Apollonius_Theorem :\n  ∀ (A B C D : Point),\n    triangle A B C ∧\n    midpoint B D C\n    → |(A─B)| * |(A─B)| + |(A─C)| * |(A─C)| = 2 * (|(A─D)| * |(A─D)| + |(B─D)| * |(B─D)|) := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Apollonius_Theorem :\n  ∀ (A B C D : Point),\n    triangle A B C ∧\n    midpoint B D C\n    → |(A─B)| * |(A─B)| + |(A─C)| * |(A─C)| = 2 * (|(A─D)| * |(A─D)| + |(B─D)| * |(B─D)|) := by"}
{"name": "Numina_Geometry_808", "uuid": "60739bfb-b907-4b38-be36-deedcb840a01", "statement_id": "5717937e-4d78-4947-b0f2-84d0e3a82684", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_808 :\n  ∀ (A B C D : Point) (AB BC CD DA : Line),\n    (formQuadrilateral A B C D AB BC CD DA) ∧\n    (∠C:B:D = ∠C:A:B) ∧\n    (∠A:C:D = ∠B:D:A) →\n    ∠A:B:C = ∠A:D:C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_808 :\n  ∀ (A B C D : Point) (AB BC CD DA : Line),\n    (formQuadrilateral A B C D AB BC CD DA) ∧\n    (∠C:B:D = ∠C:A:B) ∧\n    (∠A:C:D = ∠B:D:A) →\n    ∠A:B:C = ∠A:D:C := by"}
{"name": "Numina_Geometry_623", "uuid": "67ef6026-ba45-45a6-b35f-e8059c3ad01c", "statement_id": "f8ad37e2-602e-41ed-970f-b51fe76f4110", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_623 :\n  ∀ (A B C K L M : Point),\n    rightTriangle C A B ∧\n    isoTriangle C A B ∧\n    midpoint A K B ∧\n    between B L C ∧\n    between A M C ∧\n    |(B─L)| = |(C─M)| →\n    rightTriangle K L M ∧\n    isoTriangle K L M := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_623 :\n  ∀ (A B C K L M : Point),\n    rightTriangle C A B ∧\n    isoTriangle C A B ∧\n    midpoint A K B ∧\n    between B L C ∧\n    between A M C ∧\n    |(B─L)| = |(C─M)| →\n    rightTriangle K L M ∧\n    isoTriangle K L M := by"}
{"name": "median_is_half_side_implies_right_triangle", "uuid": "c652444e-aad1-4117-b697-806990a4156f", "statement_id": "055a159d-9b06-4323-ac32-db05184625da", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem median_is_half_side_implies_right_triangle:\n  ∀ (A B C M : Point),\n    triangle A B C ∧\n    midpoint B M C ∧\n    |(A─M)| = |(B─M)|\n    → ∠ B:A:C = ∟ := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem median_is_half_side_implies_right_triangle:\n  ∀ (A B C M : Point),\n    triangle A B C ∧\n    midpoint B M C ∧\n    |(A─M)| = |(B─M)|\n    → ∠ B:A:C = ∟ := by"}
{"name": "Numina_Geometry_800", "uuid": "73493c42-bb79-4c87-a07b-10bbc45ad5b7", "statement_id": "da4c3468-364b-4d49-b2a3-455208a213c9", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_800 : ∀ (A B C L X Y : Point) (XL BC: Line) (Ω : Circle),\n  triangle A B C ∧\n  between A L C ∧\n  between A X B ∧\n  (∠ A:L:B = ∠ B:L:C) ∧\n  distinctPointsOnLine X L XL ∧\n  distinctPointsOnLine B C BC ∧\n  (¬ XL.intersectsLine BC) ∧\n  circumCircle Ω A X C ∧\n  Y.onCircle Ω ∧\n  between B Y C\n  → |(A─X)| = |(B─Y)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_800 : ∀ (A B C L X Y : Point) (XL BC: Line) (Ω : Circle),\n  triangle A B C ∧\n  between A L C ∧\n  between A X B ∧\n  (∠ A:L:B = ∠ B:L:C) ∧\n  distinctPointsOnLine X L XL ∧\n  distinctPointsOnLine B C BC ∧\n  (¬ XL.intersectsLine BC) ∧\n  circumCircle Ω A X C ∧\n  Y.onCircle Ω ∧\n  between B Y C\n  → |(A─X)| = |(B─Y)| := by"}
{"name": "Numina_Geometry_1011", "uuid": "c073d12b-51b9-4278-80ff-4b983cf27b26", "statement_id": "0125b336-8a79-4e2b-80bf-79244863d47f", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1011 :\n  ∀ (A B C M N : Point),\n    (triangle A B C) ∧\n    (|(A─C)| ≥ |(B─C)| ∧ |(A─C)| ≥ |(A─B)|) ∧\n    (between A M C) ∧\n    (between A N C) ∧\n    (|(A─M)| = |(A─B)|) ∧\n    (|(C─N)| = |(C─B)|) ∧\n    (|(B─M)| = |(B─N)|) →\n    isoTriangle B A C := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1011 :\n  ∀ (A B C M N : Point),\n    (triangle A B C) ∧\n    (|(A─C)| ≥ |(B─C)| ∧ |(A─C)| ≥ |(A─B)|) ∧\n    (between A M C) ∧\n    (between A N C) ∧\n    (|(A─M)| = |(A─B)|) ∧\n    (|(C─N)| = |(C─B)|) ∧\n    (|(B─M)| = |(B─N)|) →\n    isoTriangle B A C := by"}
{"name": "Numina_Geometry_557", "uuid": "9096723d-d10b-4e20-8cd5-d817b8d00bf9", "statement_id": "3d557fd5-f618-40bc-ad16-9bf32e091889", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_557 :\n  ∀ (a b c d e : Point),\n    (triangle a b c) ∧\n    coll b c d ∧\n    coll a c e ∧\n    ∠ a:e:b = ∟ ∧\n    ∠ a:d:b = ∟ ∧ e ≠ a ∧ d ≠ b ∧\n    (|(a─d)| = |(b─e)|)\n    → isoTriangle c a b := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_557 :\n  ∀ (a b c d e : Point),\n    (triangle a b c) ∧\n    coll b c d ∧\n    coll a c e ∧\n    ∠ a:e:b = ∟ ∧\n    ∠ a:d:b = ∟ ∧ e ≠ a ∧ d ≠ b ∧\n    (|(a─d)| = |(b─e)|)\n    → isoTriangle c a b := by"}
{"name": "Numina_Geometry_856", "uuid": "141f310f-817e-4926-b3c3-b26a23d7ea22", "statement_id": "4205368f-7c3f-4425-b731-139bc831c437", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_856 :\n  ∀ (A B C D E F P : Point) (AB BC CD DA : Line),\n    (parallelogram A B C D AB BC CD DA) ∧\n    |(A─B)| = |(B─C)| ∧\n    |(B─C)| = |(C─D)| ∧\n    |(C─D)| = |(D─A)| ∧\n    midpoint A E B ∧\n    midpoint B F C ∧\n    |(P─A)| = |(P─F)| ∧\n    |(P─E)| = |(P─C)|\n    → coll B D P := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_856 :\n  ∀ (A B C D E F P : Point) (AB BC CD DA : Line),\n    (parallelogram A B C D AB BC CD DA) ∧\n    |(A─B)| = |(B─C)| ∧\n    |(B─C)| = |(C─D)| ∧\n    |(C─D)| = |(D─A)| ∧\n    midpoint A E B ∧\n    midpoint B F C ∧\n    |(P─A)| = |(P─F)| ∧\n    |(P─E)| = |(P─C)|\n    → coll B D P := by"}
{"name": "Numina_Geometry_1652", "uuid": "82c72278-b435-428d-a7ab-3424c3014c99", "statement_id": "e038b88b-5ed4-42cf-8010-da0bfb00b85b", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1652 :\n  ∀ (A B C D E G : Point) (AD BE : Line),\n    triangle A B C ∧\n    midpoint B D C ∧\n    midpoint A E C ∧\n    distinctPointsOnLine A D AD ∧\n    distinctPointsOnLine B E BE ∧\n    twoLinesIntersectAtPoint AD BE G ∧\n    |(A─G)| = |(B─G)| ∧\n    |(B─G)| = |(C─G)|\n    → |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1652 :\n  ∀ (A B C D E G : Point) (AD BE : Line),\n    triangle A B C ∧\n    midpoint B D C ∧\n    midpoint A E C ∧\n    distinctPointsOnLine A D AD ∧\n    distinctPointsOnLine B E BE ∧\n    twoLinesIntersectAtPoint AD BE G ∧\n    |(A─G)| = |(B─G)| ∧\n    |(B─G)| = |(C─G)|\n    → |(A─B)| = |(B─C)| ∧ |(B─C)| = |(C─A)| := by"}
{"name": "Numina_Geometry_850", "uuid": "9bf9f496-2b23-44c6-8b9c-e78d860a578f", "statement_id": "3dbaafc2-9907-4d44-adf4-502c8c9bd0f1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_850 : ∀ (A B C I O : Point) (Ω : Circle), (triangle A B C) ∧ (inCentre I A B C) ∧ (circumCentre O A I C) ∧ (circumCircle Ω A B C) → O.onCircle Ω := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_850 : ∀ (A B C I O : Point) (Ω : Circle), (triangle A B C) ∧ (inCentre I A B C) ∧ (circumCentre O A I C) ∧ (circumCircle Ω A B C) → O.onCircle Ω := by"}
{"name": "Numina_Geometry_1200", "uuid": "e1365174-0dcd-442b-8ce5-d69004e65d9d", "statement_id": "39feacbe-fe9d-4659-8f3d-b2a2541a8c5e", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1200 :\n  ∀ (A B C K E : Point),\n  formTriangle A B C AB BC CA ∧\n  midpoint B K C ∧\n  foot A E BC ∧\n  ∠ A:B:C = ∠ A:C:B + ∠ A:C:B\n    → |(A─B)| = |(E─K)| + |(E─K)| := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1200 :\n  ∀ (A B C K E : Point),\n  formTriangle A B C AB BC CA ∧\n  midpoint B K C ∧\n  foot A E BC ∧\n  ∠ A:B:C = ∠ A:C:B + ∠ A:C:B\n    → |(A─B)| = |(E─K)| + |(E─K)| := by"}
{"name": "Numina_Geometry_1633", "uuid": "80bfa5e1-c17d-4f26-82b4-eb4f012c3ab6", "statement_id": "d12160ba-e02f-439e-a649-4d8925ceec20", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1633 :\n  ∀ (A B C M N : Point),\n    (triangle A B C) ∧\n    (between A M B) ∧\n    (between B N C) ∧\n    (∠M:N:B = ∠A:C:B) ∧\n    (|(B─N)| = 1) ∧\n    (|(M─N)| = 2) ∧\n    (|(A─M)| = 3) →\n    |(A─C)| > 4 := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_1633 :\n  ∀ (A B C M N : Point),\n    (triangle A B C) ∧\n    (between A M B) ∧\n    (between B N C) ∧\n    (∠M:N:B = ∠A:C:B) ∧\n    (|(B─N)| = 1) ∧\n    (|(M─N)| = 2) ∧\n    (|(A─M)| = 3) →\n    |(A─C)| > 4 := by"}
{"name": "Numina_Geometry_705", "uuid": "bb7ca9f9-0a54-441c-aa11-cb9a50bf54a4", "statement_id": "0fa2c929-3b1e-48b7-96f1-0ec33022c7c1", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_705 :\n  ∀ (S M Q T O : Point),\n    triangle S Q T ∧\n    coll Q T M ∧\n    (∠ Q:S:M = ∠ M:S:T) ∧\n    between S O T ∧\n    (∠ O:Q:T = ∠ Q:T:S + ∠ Q:S:T)\n    → ∠ Q:O:M = ∠ M:O:T := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_705 :\n  ∀ (S M Q T O : Point),\n    triangle S Q T ∧\n    coll Q T M ∧\n    (∠ Q:S:M = ∠ M:S:T) ∧\n    between S O T ∧\n    (∠ O:Q:T = ∠ Q:T:S + ∠ Q:S:T)\n    → ∠ Q:O:M = ∠ M:O:T := by"}
{"name": "Numina_Geometry_542", "uuid": "20a284e1-12a7-4e09-a38b-1e3902e8884e", "statement_id": "c072cde3-74e3-48ab-9ef2-b18449b09c97", "system": "You are an expert in mathematics and proving theorems in Lean 4.", "instruction": "Think about and solve the following problems step by step in Lean 4.\n# Formal Statement:\n\n```lean4\nimport Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_542 : ∀ (A B C H P Q : Point) (AB BC CA : Line),\n    (formAcuteTriangle A B C AB BC CA) ∧\n    foot A H BC ∧\n    foot H P AB ∧\n    foot H Q AC\n    → ∠B:Q:H = ∠C:P:H := by\n```\n", "natural_language": "", "formal_statement": "import Mathlib\nimport SystemE\nimport LeanGeo\nnamespace LeanGeo\n\ntheorem Numina_Geometry_542 : ∀ (A B C H P Q : Point) (AB BC CA : Line),\n    (formAcuteTriangle A B C AB BC CA) ∧\n    foot A H BC ∧\n    foot H P AB ∧\n    foot H Q AC\n    → ∠B:Q:H = ∠C:P:H := by"}
